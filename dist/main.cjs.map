{"version":3,"file":"main.cjs","sources":["../src/modules/events.ts","../src/modules/renderBox.ts","../src/components/editor.ts","../src/utils/position.ts","../src/components/scroller.ts","../src/modules/cell.ts","../src/components/sheet.ts","../src/components/table.ts","../src/components/toolbar.ts","../src/modules/config.ts","../src/modules/selection.ts","../src/modules/styles.ts","../src/modules/viewport.ts","../src/modules/column.ts","../src/modules/row.ts","../src/utils/createData.ts","../src/modules/cache.ts","../src/components/columnsBar.ts","../src/components/rowsBar.ts","../src/main.ts"],"sourcesContent":["import { Selection } from \"../main\";\nexport var EventTypes;\n(function (EventTypes) {\n    EventTypes[\"CELL_CLICK\"] = \"CELL_CLICK\";\n    EventTypes[\"SELECTION_CHANGE\"] = \"CHANGE_SELECTION\";\n    EventTypes[\"CELL_CHANGE\"] = \"CELL_CHANGE\";\n})(EventTypes || (EventTypes = {}));\nexport class Events {\n    root;\n    constructor(root) {\n        this.root = root;\n    }\n    dispatch(action) {\n        switch (action.type) {\n            case EventTypes.CELL_CLICK: {\n                const { event, scroller } = action;\n                //\n                //* Here may be side effects\n                //\n                this.cellClick(event, scroller);\n                break;\n            }\n            case EventTypes.SELECTION_CHANGE: {\n                const { selection, enableCallback } = action;\n                //\n                //* Here may be side effects\n                //\n                this.changeSelection(selection, enableCallback);\n                break;\n            }\n            case EventTypes.CELL_CHANGE: {\n                const { cell, values } = action;\n                //\n                //* Here may be side effects\n                //\n                this.changeCellValues(cell, values);\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n    }\n    cellClick = (event, scroller) => {\n        if (event.button !== 0)\n            return; // Left mouse button\n        const { offsetX, offsetY } = event;\n        const clickedCell = this.root.getCellByCoords(offsetX, offsetY);\n        const cell = this.root.getCell(clickedCell);\n        const selection = new Selection();\n        selection.selectedCell = clickedCell;\n        selection.selectedRange = {\n            from: clickedCell,\n            to: clickedCell,\n        };\n        scroller.setSelectingMode(true);\n        this.changeSelection(selection, true);\n        this.root.config.onCellClick?.(event, cell);\n    };\n    changeSelection = (selection, enableCallback = false) => {\n        this.root.selection = selection;\n        if (enableCallback)\n            this.root.config.onSelectonChange?.(selection);\n        this.root.renderSheet();\n        this.root.renderColumnsBar();\n        this.root.renderRowsBar();\n    };\n    changeCellValues(cell, values) {\n        this.root.changeCellValues(cell.position, values);\n        this.root.config.onCellChange?.(cell);\n    }\n}\n","export class RenderBox {\n    x;\n    y;\n    width;\n    height;\n    constructor(config, cellPosition) {\n        this.x = this.getXCoord(cellPosition.column, config);\n        this.y = this.getYCoord(cellPosition.row, config);\n        this.width = config.columns[cellPosition.column].width;\n        this.height = config.rows[cellPosition.row].height;\n    }\n    getXCoord(column, config) {\n        let x = 0;\n        for (let i = 0; i < column; i++) {\n            x += config.columns[i].width;\n        }\n        return x;\n    }\n    getYCoord(row, config) {\n        let y = 0;\n        for (let i = 0; i < row; i++) {\n            y += config.rows[i].height;\n        }\n        return y;\n    }\n}\n","import { CSS_PREFIX } from \"../main\";\nimport { EventTypes } from \"../modules/events\";\nimport { RenderBox } from \"../modules/renderBox\";\nexport class Editor {\n    element;\n    root;\n    constructor(root) {\n        this.root = root;\n        const element = document.createElement(\"input\");\n        element.classList.add(CSS_PREFIX + \"editor\");\n        this.element = element;\n        this.hide();\n    }\n    hide() {\n        this.element.style.display = \"none\";\n        this.element.classList.add(\"hide\");\n        this.element.blur();\n        window.removeEventListener(\"click\", this.handleClickOutside);\n        this.element.removeEventListener(\"keydown\", this.handleKeydown);\n        this.root.focusTable();\n    }\n    show(position, initialString) {\n        const { height, width, x, y } = new RenderBox(this.root.config, position);\n        const cell = this.root.getCell(position);\n        this.element.classList.remove(\"hide\");\n        this.element.style.top =\n            y - this.root.viewport.top + this.root.columnsBarHeight + \"px\";\n        this.element.style.left =\n            x - this.root.viewport.left + this.root.rowsBarWidth + \"px\";\n        this.element.style.width = width + \"px\";\n        this.element.style.height = height + \"px\";\n        this.element.style.display = \"block\";\n        window.addEventListener(\"click\", this.handleClickOutside);\n        this.element.addEventListener(\"keydown\", this.handleKeydown);\n        this.element.value = initialString ? initialString : cell.value;\n        this.element.focus();\n        if (!initialString)\n            this.element.select();\n    }\n    handleKeydown = (event) => {\n        const { key } = event;\n        switch (key) {\n            case \"Escape\": {\n                this.hide();\n                break;\n            }\n            case \"Enter\": {\n                if (!this.root.selection.selectedCell)\n                    return;\n                this.root.events.dispatch({\n                    type: EventTypes.CELL_CHANGE,\n                    cell: this.root.getCell(this.root.selection.selectedCell),\n                    values: {\n                        value: this.element.value,\n                        displayValue: this.element.value,\n                    },\n                });\n                this.hide();\n            }\n        }\n    };\n    handleClickOutside = (event) => {\n        const target = event.target;\n        if (!this.element.contains(target)) {\n            this.hide();\n        }\n    };\n}\n","export function checkEqualRanges(range1, range2) {\n    const equalRows = range1.from.row === range2.to.row;\n    const equalColumns = range1.from.column === range2.to.column;\n    return equalRows && equalColumns;\n}\nexport function checkEqualCellSelections(selection1, selection2) {\n    return (selection1.column === selection2.column && selection1.row === selection2.row);\n}\n","import { CSS_PREFIX } from \"../main\";\nimport { EventTypes } from \"../modules/events\";\nimport { checkEqualCellSelections } from \"../utils/position\";\nexport class Scroller {\n    element;\n    verticalScroller;\n    horizontalScroller;\n    root;\n    isSelecting = false;\n    constructor(root) {\n        this.root = root;\n        const { horizontalScroller, scroller, verticalScroller } = this.buildComponent();\n        this.element = scroller;\n        this.verticalScroller = verticalScroller;\n        this.horizontalScroller = horizontalScroller;\n        this.element.style.height = this.root.config.view.height + \"px\";\n        this.element.style.width = this.root.config.view.width + \"px\";\n        this.element.style.top = this.root.columnsBarHeight + \"px\";\n        this.element.style.left = this.root.rowsBarWidth + \"px\";\n        this.element.tabIndex = -1;\n        this.updateScrollerSize(); //* Init size set\n        this.element.addEventListener(\"scroll\", this.handleScroll);\n        this.element.addEventListener(\"mousedown\", this.handleClick);\n        this.element.addEventListener(\"mousemove\", this.handleMouseMove);\n        this.element.addEventListener(\"mouseup\", this.handleMouseUp);\n        this.element.addEventListener(\"dblclick\", this.handleDoubleClick);\n        this.element.addEventListener(\"keydown\", this.handleKeydown);\n    }\n    setSelectingMode(mode) {\n        this.isSelecting = mode;\n    }\n    handleMouseMove = (event) => {\n        if (!this.isSelecting)\n            return;\n        const { offsetX, offsetY } = event;\n        const lastSelectedCell = this.root.getCellByCoords(offsetX, offsetY);\n        let isRangeChanged = false;\n        if (this.root.selection.selectedRange) {\n            isRangeChanged = !checkEqualCellSelections(this.root.selection.selectedRange.to, lastSelectedCell);\n            if (isRangeChanged) {\n                this.root.selection.selectedRange.to = lastSelectedCell;\n                this.root.events.dispatch({\n                    type: EventTypes.SELECTION_CHANGE,\n                    selection: this.root.selection,\n                    enableCallback: true,\n                });\n            }\n        }\n    };\n    handleMouseUp = () => {\n        this.isSelecting = false;\n        const newSelection = { ...this.root.selection };\n        if (this.root.selection.selectedRange) {\n            if (checkEqualCellSelections(this.root.selection.selectedRange.from, this.root.selection.selectedRange.to)) {\n                newSelection.selectedRange = null;\n                this.root.events.dispatch({\n                    type: EventTypes.SELECTION_CHANGE,\n                    selection: newSelection,\n                    enableCallback: false,\n                });\n            }\n        }\n        this.root.renderSheet();\n        this.root.renderColumnsBar();\n        this.root.renderRowsBar();\n    };\n    handleDoubleClick = (event) => {\n        event.preventDefault();\n        const position = this.root.getCellByCoords(event.offsetX, event.offsetY);\n        this.root.showEditor(position);\n    };\n    handleKeydown = (event) => {\n        //* Navigation\n        if ([\"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"].includes(event.key)) {\n            event.preventDefault();\n            this.root.selection.selectedRange = null;\n            switch (event.key) {\n                case \"ArrowLeft\": {\n                    if (this.root.selection.selectedCell &&\n                        this.root.selection.selectedCell.column > 0) {\n                        this.root.selection.selectedCell.column -= 1;\n                        // this.root.renderSheet();\n                    }\n                    break;\n                }\n                case \"ArrowRight\": {\n                    if (this.root.selection.selectedCell &&\n                        this.root.selection.selectedCell.column <\n                            this.root.config.columns.length - 1) {\n                        this.root.selection.selectedCell.column += 1;\n                        // this.root.renderSheet();\n                    }\n                    break;\n                }\n                case \"ArrowUp\": {\n                    if (this.root.selection.selectedCell &&\n                        this.root.selection.selectedCell.row > 0) {\n                        this.root.selection.selectedCell.row -= 1;\n                        // this.root.renderSheet();\n                    }\n                    break;\n                }\n                case \"ArrowDown\": {\n                    if (this.root.selection.selectedCell &&\n                        this.root.selection.selectedCell.row <\n                            this.root.config.rows.length - 1) {\n                        this.root.selection.selectedCell.row += 1;\n                        // this.root.renderSheet();\n                    }\n                    break;\n                }\n            }\n            this.root.events.dispatch({\n                type: EventTypes.SELECTION_CHANGE,\n                selection: this.root.selection,\n                enableCallback: true,\n            });\n        }\n        //* Start typings\n        const keysRegex = /^([a-z]|[а-я])$/;\n        if (!event.metaKey && !event.ctrlKey) {\n            //* Prevent handle shortcutrs\n            const isPressedLetterKey = keysRegex.test(event.key.toLowerCase());\n            if (event.key === \"F2\" || isPressedLetterKey) {\n                //* English and Russian keyboard. Or F2 button\n                event.preventDefault();\n                if (!this.root.selection.selectedCell)\n                    return;\n                this.root.showEditor(this.root.selection.selectedCell, isPressedLetterKey ? event.key : undefined);\n            }\n        }\n        if (event.key === \"Delete\") {\n            event.preventDefault();\n            this.root.deleteSelectedCellsValues();\n            this.root.renderSheet();\n        }\n    };\n    handleClick = (event) => {\n        this.root.events.dispatch({\n            type: EventTypes.CELL_CLICK,\n            event,\n            scroller: this,\n        });\n    };\n    handleScroll = () => {\n        const rect = this.getViewportBoundlingRect();\n        this.root.viewport.updateValues(rect);\n        this.root.renderSheet();\n        this.root.renderColumnsBar();\n        this.root.renderRowsBar();\n    };\n    getViewportBoundlingRect() {\n        const { scrollTop, scrollLeft } = this.element;\n        const { height, width } = this.element.getBoundingClientRect();\n        const bottom = scrollTop + height;\n        const right = scrollLeft + width;\n        return {\n            top: scrollTop,\n            left: scrollLeft,\n            bottom,\n            right,\n        };\n    }\n    buildComponent() {\n        const scroller = document.createElement(\"div\");\n        const verticalScroller = document.createElement(\"div\");\n        const horizontalScroller = document.createElement(\"div\");\n        const groupScrollers = document.createElement(\"div\");\n        const stack = document.createElement(\"div\");\n        verticalScroller.style.width = \"0px\";\n        verticalScroller.style.pointerEvents = \"none\";\n        horizontalScroller.style.pointerEvents = \"none\";\n        groupScrollers.style.display = \"flex\";\n        stack.appendChild(verticalScroller);\n        stack.appendChild(horizontalScroller);\n        groupScrollers.appendChild(stack);\n        this.verticalScroller = verticalScroller;\n        this.horizontalScroller = horizontalScroller;\n        scroller.appendChild(groupScrollers);\n        scroller.classList.add(CSS_PREFIX + \"scroller\");\n        return { scroller, verticalScroller, horizontalScroller };\n    }\n    getActualHeight() {\n        return this.root.config.rows.reduce((acc, curr) => {\n            acc += curr.height;\n            return acc;\n        }, 0);\n    }\n    getActualWidth() {\n        return this.root.config.columns.reduce((acc, curr) => {\n            acc += curr.width;\n            return acc;\n        }, 0);\n    }\n    updateScrollerSize() {\n        const totalHeight = this.getActualHeight();\n        const totalWidth = this.getActualWidth();\n        this.setScrollerHeight(totalHeight);\n        this.setScrollerWidth(totalWidth);\n    }\n    setScrollerHeight(height) {\n        this.verticalScroller.style.height = height + \"px\";\n    }\n    setScrollerWidth(width) {\n        this.horizontalScroller.style.width = width + \"px\";\n    }\n}\n","import { RenderBox } from \"./renderBox\";\nexport class CellStyles {\n    fontSize = 16;\n    fontColor = \"black\";\n    background = \"white\";\n    borderColor = \"black\";\n    selectedBackground = \"#4287f5\";\n    selectedFontColor = \"#ffffff\";\n    constructor(props) {\n        if (props) {\n            Object.assign(this, props); // Override default styles\n        }\n    }\n}\nexport class Position {\n    row;\n    column;\n    constructor(row, column) {\n        this.row = row;\n        this.column = column;\n    }\n}\nexport class SerializableCell {\n    value;\n    displayValue;\n    resultValue;\n    position;\n    style;\n    constructor(props) {\n        this.value = props.value;\n        this.displayValue = props.displayValue;\n        this.resultValue = props.resultValue;\n        this.position = props.position;\n        this.style = props.style;\n    }\n}\nexport class Cell {\n    /** True value (data) */\n    value;\n    /** Value to render */\n    displayValue;\n    /** This refers to the values that were obtained by calculations, for example, after calculating the formula  */\n    resultValue;\n    position;\n    style = null;\n    constructor(props) {\n        this.value = props.value;\n        this.displayValue = props.displayValue;\n        this.resultValue = props.resultValue;\n        this.position = props.position;\n        this.style = props.style;\n    }\n    getSerializableCell() {\n        const cell = new SerializableCell({\n            displayValue: this.displayValue,\n            position: this.position,\n            resultValue: this.resultValue,\n            style: this.style,\n            value: this.value,\n        });\n        return cell;\n    }\n    changeStyles(styles) {\n        this.style = styles;\n    }\n    changeValues(values) {\n        Object.assign(this, values);\n    }\n    isCellInRange(root) {\n        const { column, row } = this.position;\n        const { selectedRange } = root.selection;\n        if (!selectedRange)\n            return false;\n        const isCellInRow = row >= Math.min(selectedRange.from.row, selectedRange.to.row) &&\n            row <= Math.max(selectedRange.to.row, selectedRange.from.row);\n        const isCellInCol = column >= Math.min(selectedRange.from.column, selectedRange.to.column) &&\n            column <= Math.max(selectedRange.to.column, selectedRange.from.column);\n        return isCellInCol && isCellInRow;\n    }\n    render(root) {\n        const renderBox = new RenderBox(root.config, this.position);\n        let { x, y } = renderBox;\n        const { height, width } = renderBox;\n        const { ctx } = root;\n        const isCellSelected = root.selection.selectedCell?.row === this.position.row &&\n            root.selection.selectedCell.column === this.position.column;\n        const isCellInRange = this.isCellInRange(root);\n        y -= root.viewport.top;\n        x -= root.viewport.left;\n        const styles = this.style ?? root.styles.cells;\n        ctx.clearRect(x, y, width, height);\n        ctx.fillStyle =\n            isCellSelected || isCellInRange\n                ? styles.selectedBackground\n                : styles.background;\n        ctx.strokeStyle = \"black\";\n        ctx.fillRect(x, y, width - 1, height - 1);\n        ctx.strokeRect(x, y, width, height);\n        ctx.fillStyle =\n            isCellSelected || isCellInRange\n                ? styles.selectedFontColor\n                : styles.fontColor;\n        ctx.textAlign = \"left\";\n        ctx.font = `${styles.fontSize}px Arial`;\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(this.displayValue, x + 2, y + height / 2);\n    }\n}\n","import { CSS_PREFIX } from \"../main\";\nimport { Position } from \"../modules/cell\";\n/**\n * Display (CANVAS) element where cells render\n */\nexport class Sheet {\n    element;\n    ctx;\n    root;\n    constructor(root) {\n        this.root = root;\n        const canvas = document.createElement(\"canvas\");\n        canvas.classList.add(CSS_PREFIX + \"sheet\");\n        //* Set up canvas sizes based on provided root config\n        canvas.height = this.root.config.view.height;\n        canvas.width = this.root.config.view.width;\n        canvas.style.width = this.root.config.view.width + \"px\";\n        canvas.style.height = this.root.config.view.height + \"px\";\n        canvas.style.left = \"0px\";\n        this.element = canvas;\n        const ctx = this.element.getContext(\"2d\");\n        if (!ctx)\n            throw new Error(\"Enable hardware acceleration\");\n        this.ctx = ctx;\n    }\n    getCellByCoords(x, y) {\n        let row = 0;\n        let height = 0;\n        while (height <= y) {\n            height += this.root.config.rows[row].height;\n            if (height >= y)\n                break;\n            row++;\n        }\n        let col = 0;\n        let width = 0;\n        while (width <= x) {\n            width += this.root.config.columns[col].width;\n            if (width >= x)\n                break;\n            col++;\n        }\n        return new Position(row, col);\n    }\n    renderCell(position) {\n        const { column, row } = position;\n        this.root.data[row][column].render(this.root);\n    }\n    renderSheet() {\n        const firstRowIdx = this.root.viewport.firstRow;\n        const lastColIdx = this.root.viewport.lastCol + 3;\n        const lastRowIdx = this.root.viewport.lastRow + 3;\n        const firstColIdx = this.root.viewport.firstCol;\n        for (let row = firstRowIdx; row <= lastRowIdx; row++) {\n            for (let col = firstColIdx; col <= lastColIdx; col++) {\n                if (!this.root.config.columns[col] || !this.root.config.rows[row])\n                    break; //* Prevent read undefined\n                this.renderCell({ column: col, row });\n            }\n        }\n    }\n}\n","import { CSS_PREFIX } from \"../main\";\n/** Base (root) component */\nexport class Table {\n    element;\n    root;\n    constructor(root) {\n        this.root = root;\n        const container = document.createElement(\"div\");\n        container.classList.add(CSS_PREFIX + \"spreadsheet_container\");\n        this.element = container;\n        this.changeElementSizes(this.root.viewProps);\n    }\n    changeElementSizes(sizes) {\n        const { height, width } = sizes;\n        this.element.style.width = width + this.root.rowsBarWidth + \"px\";\n        this.element.style.height = height + this.root.columnsBarHeight + \"px\";\n    }\n}\n","import { CSS_PREFIX } from \"../main\";\nexport class Toolbar {\n    element;\n    root;\n    height = 0;\n    constructor(root) {\n        this.root = root;\n        const toolbarElement = document.createElement(\"div\");\n        toolbarElement.classList.add(CSS_PREFIX + \"toolbar\");\n        this.element = toolbarElement;\n    }\n}\n","export class Config {\n    rows;\n    columns;\n    view = {\n        width: 800,\n        height: 600,\n    };\n    onCellClick = null;\n    onSelectonChange = null;\n    onCellChange = null;\n    constructor(props) {\n        this.columns = props.columns;\n        this.rows = props.rows;\n        this.view = props.view;\n        this.onCellClick = props.onCellClick ?? null;\n        this.onSelectonChange = props.onSelectionChange ?? null;\n        this.onCellChange = props.onCellChange ?? null;\n    }\n}\n","export class Selection {\n    selectedCell = null;\n    selectedRange = null;\n}\n","import { CellStyles } from \"./cell\";\nexport class Styles {\n    cells;\n    constructor() {\n        this.cells = new CellStyles();\n    }\n}\n","export class Viewport {\n    root;\n    top;\n    left;\n    right;\n    bottom;\n    firstRow;\n    lastRow;\n    firstCol;\n    lastCol;\n    constructor(root, props) {\n        this.root = root;\n        this.top = props.top;\n        this.left = props.left;\n        this.right = props.right;\n        this.bottom = props.bottom;\n        this.firstRow = this.getFirstRow();\n        this.lastCol = this.getFirstRow(); //!Temp\n        this.firstCol = this.getFirstRow(); //!Temp\n        this.lastRow = this.getLastRow();\n        this.updateValues({\n            top: 0,\n            left: 0,\n            right: this.root.viewProps.width,\n            bottom: this.root.viewProps.height,\n        });\n    }\n    updateValues(props) {\n        this.top = props.top;\n        this.left = props.left;\n        this.right = props.right;\n        this.bottom = props.bottom;\n        this.firstRow = this.getFirstRow();\n        this.lastRow = this.getLastRow();\n        this.firstCol = this.getFirstCol();\n        this.lastCol = this.getLastCol();\n    }\n    /** Get index of first row in viewport */\n    getFirstRow() {\n        const rowIdx = this.root.cache.getRowByYCoord(this.top);\n        return rowIdx;\n    }\n    getLastRow() {\n        const rowIdx = this.root.cache.getRowByYCoord(this.bottom);\n        return rowIdx;\n    }\n    getFirstCol() {\n        const colIdx = this.root.cache.getColumnByXCoord(this.left);\n        return colIdx;\n    }\n    getLastCol() {\n        const colIdx = this.root.cache.getColumnByXCoord(this.right);\n        return colIdx;\n    }\n}\n","export class Column {\n    width;\n    title;\n    constructor(props) {\n        this.width = props.width;\n        this.title = props.title;\n    }\n}\n","export class Row {\n    height;\n    title;\n    constructor(props) {\n        this.height = props.height;\n        this.title = props.title;\n    }\n}\n","import { Cell } from \"../modules/cell\";\nimport { Column } from \"../modules/column\";\nimport { Config } from \"../modules/config\";\nimport { Row } from \"../modules/row\";\nexport function createSampleData(rows, columns, fillCellsByCoords = false) {\n    const data = [];\n    for (let row = 0; row <= rows; row++) {\n        const innerRow = [];\n        for (let col = 0; col <= columns; col++) {\n            const value = fillCellsByCoords ? `${row}:${col}` : \"\";\n            const cell = new Cell({\n                displayValue: value,\n                resultValue: value,\n                value,\n                position: {\n                    column: col,\n                    row: row,\n                },\n                style: null,\n            });\n            innerRow.push(cell);\n        }\n        data.push(innerRow);\n    }\n    return data;\n}\nexport function createSampleConfig(rows, columns) {\n    const rowsArr = [];\n    for (let i = 0; i <= rows; i++) {\n        const rowItem = new Row({\n            height: 40,\n            title: String(i),\n        });\n        rowsArr.push(rowItem);\n    }\n    const colsArr = [];\n    for (let i = 0; i <= columns; i++) {\n        const colItem = new Column({\n            title: String(i),\n            width: 150,\n        });\n        colsArr.push(colItem);\n    }\n    const config = new Config({\n        columns: colsArr,\n        rows: rowsArr,\n        view: {\n            height: 600,\n            width: 800,\n        },\n    });\n    return config;\n}\nexport function makeSpreadsheetConfigAndData(rows, columns) {\n    const data = createSampleData(rows, columns);\n    const config = createSampleConfig(rows, columns);\n    return { data, config };\n}\n","export class CachedColumn {\n    xPos;\n    colIdx;\n    constructor(props) {\n        this.xPos = props.xPos;\n        this.colIdx = props.colIdx;\n    }\n}\nexport class CachedRow {\n    yPos;\n    rowIdx;\n    constructor(props) {\n        this.yPos = props.yPos;\n        this.rowIdx = props.rowIdx;\n    }\n}\nexport class Cache {\n    columns;\n    rows;\n    constructor(initial) {\n        this.columns = initial.columns;\n        this.rows = initial.rows;\n    }\n    getRowByYCoord(y) {\n        let rowIdx = 0;\n        for (let i = 0; i < this.rows.length; i++) {\n            if (y <= this.rows[i].yPos) {\n                //* Intersection detect\n                rowIdx = i;\n                break;\n            }\n        }\n        return rowIdx;\n    }\n    getColumnByXCoord(x) {\n        let colIdx = 0;\n        for (let i = 0; i < this.columns.length; i++) {\n            if (x <= this.columns[i].xPos) {\n                //* Intersection detect\n                colIdx = i;\n                break;\n            }\n        }\n        return colIdx;\n    }\n}\n","import { RenderBox } from \"../main\";\nexport class ColumnsBar {\n    element;\n    root;\n    height = 35;\n    width;\n    // private resizerWidth = 1;\n    ctx;\n    constructor(root) {\n        this.root = root;\n        this.element = this.createElement();\n        const ctx = this.element.getContext(\"2d\");\n        if (!ctx)\n            throw new Error(\"Enable hardware acceleration\");\n        this.ctx = ctx;\n        this.width = this.root.viewProps.width;\n    }\n    createElement() {\n        const element = document.createElement(\"canvas\");\n        element.style.position = \"absolute\";\n        element.style.height = this.height + \"px\";\n        element.style.width = this.root.viewProps.width + \"px\";\n        element.style.display = \"block\";\n        element.style.borderLeft = \"1px solid black\";\n        // element.style.boxSizing = 'border-box'\n        element.width = this.root.viewProps.width;\n        element.height = this.height;\n        return element;\n    }\n    setElementPosition(top, left) {\n        this.element.style.top = top + \"px\";\n        this.element.style.left = left + \"px\";\n    }\n    isColumnSelected(column) {\n        const { selectedCell, selectedRange } = this.root.selection;\n        if (selectedCell && selectedCell.column === column)\n            return true;\n        if (selectedRange) {\n            const inRange = column >=\n                Math.min(selectedRange.from.column, selectedRange.to.column) &&\n                column <= Math.max(selectedRange.from.column, selectedRange.to.column);\n            return inRange;\n        }\n        return false;\n    }\n    // private getYCoordWithOffset(renderBox: RenderBox): number {\n    //     const {y} = renderBox\n    //     return y + this.root.toolbarHeight\n    // }\n    // private getXCoordWithOffset(renderBox: RenderBox): number {\n    //     const {x} = renderBox\n    //     return x\n    // }\n    renderText(column, renderBox) {\n        const { width, x } = renderBox;\n        this.ctx.fillStyle = \"black\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.textBaseline = \"middle\";\n        this.ctx.font = \"12px Arial\";\n        this.ctx.fillText(this.root.config.columns[column].title, x + width / 2 - this.root.viewport.left, 0 + this.height / 2);\n    }\n    renderRect(column, renderBox) {\n        const { width, x } = renderBox;\n        const isColSelected = this.isColumnSelected(column);\n        this.ctx.fillStyle = isColSelected\n            ? this.root.styles.cells.selectedBackground\n            : \"white\";\n        this.ctx.strokeStyle = \"black\";\n        this.ctx.lineWidth = 1;\n        const specialX = x - this.root.viewport.left;\n        this.ctx.fillRect(specialX - 1, 0, width, this.height);\n        this.ctx.strokeRect(specialX - 1, 0, width, this.height);\n    }\n    renderSingleColumn(column) {\n        const renderBox = new RenderBox(this.root.config, {\n            row: 0,\n            column: column,\n        });\n        this.renderRect(column, renderBox);\n        this.renderText(column, renderBox);\n    }\n    renderBar() {\n        const lastColIdx = this.root.viewport.lastCol + 3;\n        const firstColIdx = this.root.viewport.firstCol;\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = \"black\";\n        this.ctx.lineWidth = 1;\n        this.ctx.moveTo(0, 0);\n        this.ctx.lineTo(0, this.height);\n        this.ctx.closePath();\n        this.ctx.stroke();\n        for (let col = firstColIdx; col <= lastColIdx; col++) {\n            if (!this.root.config.columns[col])\n                break;\n            this.renderSingleColumn(col);\n        }\n    }\n}\n","import { RenderBox } from \"../main\";\nexport class RowsBar {\n    element;\n    ctx;\n    root;\n    width = 35;\n    height;\n    resizerHeight = 1;\n    constructor(root) {\n        this.root = root;\n        this.element = this.createElement();\n        const ctx = this.element.getContext(\"2d\");\n        if (!ctx)\n            throw new Error(\"Enable hardware acceleration\");\n        this.ctx = ctx;\n        this.height = this.root.viewProps.height;\n    }\n    createElement() {\n        const element = document.createElement(\"canvas\");\n        element.style.position = \"absolute\";\n        element.style.height = this.root.viewProps.height + \"px\";\n        element.style.width = this.width + \"px\";\n        element.style.display = \"block\";\n        element.style.borderTop = \"1px solid black\";\n        // element.style.boxSizing = 'border-box'\n        element.width = this.width;\n        element.height = this.root.viewProps.height;\n        return element;\n    }\n    setElementPosition(top, left) {\n        this.element.style.top = top + \"px\";\n        this.element.style.left = left + \"px\";\n    }\n    isRowSelected(row) {\n        const { selectedCell, selectedRange } = this.root.selection;\n        if (selectedCell && selectedCell.row === row)\n            return true;\n        if (selectedRange) {\n            const inRange = row >= Math.min(selectedRange.from.row, selectedRange.to.row) &&\n                row <= Math.max(selectedRange.from.row, selectedRange.to.row);\n            return inRange;\n        }\n        return false;\n    }\n    renderText(row, renderBox) {\n        const { y, height } = renderBox;\n        this.ctx.fillStyle = \"black\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.textBaseline = \"middle\";\n        this.ctx.font = \"12px Arial\";\n        this.ctx.fillText(this.root.config.rows[row].title, this.width / 2, y - this.root.viewport.top + height / 2);\n    }\n    renderRect(column, renderBox) {\n        const { y, height } = renderBox;\n        const isRowSeleted = this.isRowSelected(column);\n        this.ctx.fillStyle = isRowSeleted\n            ? this.root.styles.cells.selectedBackground\n            : \"white\";\n        this.ctx.strokeStyle = \"black\";\n        this.ctx.lineWidth = this.resizerHeight;\n        const specialY = y - this.root.viewport.top;\n        this.ctx.fillRect(0, specialY - 1, this.width, height);\n        this.ctx.strokeRect(0, specialY - 1, this.width, height);\n    }\n    renderSingleRow(row) {\n        const renderBox = new RenderBox(this.root.config, {\n            column: 0,\n            row: row,\n        });\n        this.renderRect(row, renderBox);\n        this.renderText(row, renderBox);\n    }\n    renderBar() {\n        const lastRowIdx = this.root.viewport.lastRow + 3;\n        const firstRowIdx = this.root.viewport.firstRow;\n        this.ctx.beginPath();\n        this.ctx.moveTo(0, 0);\n        this.ctx.strokeStyle = \"black\";\n        this.ctx.lineWidth = 16;\n        this.ctx.lineTo(35, 0);\n        this.ctx.closePath();\n        this.ctx.stroke();\n        for (let row = firstRowIdx; row <= lastRowIdx; row++) {\n            if (!this.root.config.rows[row])\n                break;\n            this.renderSingleRow(row);\n        }\n    }\n}\n","import { Editor } from \"./components/editor\";\nimport { Scroller } from \"./components/scroller\";\nimport { Sheet } from \"./components/sheet\";\nimport { Table } from \"./components/table\";\nimport { Toolbar } from \"./components/toolbar\";\nimport { Cell, } from \"./modules/cell\";\nimport { Config, } from \"./modules/config\";\nimport { Selection } from \"./modules/selection\";\nimport { Styles } from \"./modules/styles\";\nimport { Viewport } from \"./modules/viewport\";\nimport \"./scss/main.scss\";\nimport { createSampleData } from \"./utils/createData\";\nimport { Cache, CachedColumn, CachedRow } from \"./modules/cache\";\nimport { Row } from \"./modules/row\";\nimport { Column } from \"./modules/column\";\nimport { ColumnsBar } from \"./components/columnsBar\";\nimport { RowsBar } from \"./components/rowsBar\";\nimport { Events } from \"./modules/events\";\nexport const CSS_PREFIX = \"modern_sc_\";\nexport default class Spreadsheet {\n    table;\n    scroller;\n    toolbar;\n    rowsBar;\n    columnsBar;\n    sheet;\n    editor;\n    styles;\n    config;\n    data;\n    viewport;\n    selection;\n    cache;\n    events;\n    constructor(target, props) {\n        const data = createSampleData(40, 40);\n        const config = this.makeConfigFromData(data, props?.view ?? { height: 600, width: 800 });\n        if (props?.view) {\n            config.view = props.view;\n        }\n        this.config = new Config(config);\n        this.config.onCellClick = props?.onCellClick ?? null;\n        this.config.onSelectonChange = props?.onSelectionChange ?? null;\n        this.config.onCellChange = props?.onCellChange ?? null;\n        this.rowsBar = new RowsBar(this);\n        this.columnsBar = new ColumnsBar(this);\n        this.sheet = new Sheet(this);\n        this.table = new Table(this);\n        this.scroller = new Scroller(this);\n        this.toolbar = new Toolbar(this);\n        this.editor = new Editor(this);\n        this.cache = this.getInitialCache();\n        this.viewport = new Viewport(this, this.scroller.getViewportBoundlingRect());\n        this.selection = new Selection();\n        this.events = new Events(this);\n        this.data = data;\n        this.styles = new Styles();\n        this.buildComponent();\n        this.setElementsPositions();\n        this.appendTableToTarget(target);\n        this.renderSheet();\n        this.renderColumnsBar();\n        this.renderRowsBar();\n    }\n    setRowsBarPosition() {\n        const top = this.columnsBar.height + this.toolbar.height;\n        const left = 0;\n        this.rowsBar.setElementPosition(top, left);\n    }\n    setColumnsBarPosition() {\n        const top = this.toolbar.height;\n        const left = this.rowsBar.width;\n        console.log(top, left);\n        this.columnsBar.setElementPosition(top, left);\n    }\n    setElementsPositions() {\n        this.setRowsBarPosition();\n        this.setColumnsBarPosition();\n    }\n    getInitialCache() {\n        const cachedCols = [];\n        let currentWidth = 0;\n        for (let i = 0; i <= this.config.columns.length - 1; i++) {\n            const col = this.config.columns[i];\n            currentWidth += col.width;\n            const cacheCol = new CachedColumn({\n                xPos: currentWidth,\n                colIdx: i,\n            });\n            cachedCols.push(cacheCol);\n        }\n        const cachedRows = [];\n        let currentHeight = 0;\n        for (let i = 0; i <= this.config.rows.length - 1; i++) {\n            const row = this.config.rows[i];\n            currentHeight += row.height;\n            const cacheRow = new CachedRow({\n                yPos: currentHeight,\n                rowIdx: i,\n            });\n            cachedRows.push(cacheRow);\n        }\n        const cache = new Cache({\n            columns: cachedCols,\n            rows: cachedRows,\n        });\n        console.log(\"CACHE: \", cache);\n        console.log(\"CONFIG: \", this.config);\n        return cache;\n    }\n    buildComponent() {\n        const content = document.createElement(\"div\"); //* Abstract\n        content.style.top = this.columnsBarHeight + \"px\";\n        content.style.left = this.rowsBarWidth + \"px\";\n        content.appendChild(this.sheet.element);\n        content.classList.add(CSS_PREFIX + \"content\");\n        this.table.element.appendChild(this.toolbar.element);\n        this.table.element.appendChild(this.rowsBar.element);\n        this.table.element.appendChild(this.columnsBar.element);\n        this.table.element.appendChild(content);\n        this.table.element.appendChild(this.scroller.element);\n        this.table.element.append(this.editor.element);\n    }\n    /**Destroy spreadsheet DOM element.\n     *\n     * May be usefull when need to rerender component.\n     */\n    destroy() {\n        this.table.element.remove();\n    }\n    appendTableToTarget(target) {\n        if (typeof target === \"string\") {\n            const element = document.querySelector(target);\n            if (!element)\n                throw new Error(`Element with selector ${target} is not finded in DOM.\\n Make sure it exists.`);\n            element?.appendChild(this.table.element);\n        }\n        if (target instanceof HTMLElement) {\n            target.append(this.table.element);\n        }\n    }\n    /** Canvas rendering context 2D.\n     *\n     * Abble to draw on canvas with default CanvasAPI methods\n     */\n    get ctx() {\n        return this.sheet.ctx;\n    }\n    get viewProps() {\n        return this.config.view;\n    }\n    get columnsBarHeight() {\n        return this.columnsBar.height;\n    }\n    get rowsBarWidth() {\n        return this.rowsBar.width;\n    }\n    get toolbarHeight() {\n        return this.toolbar.height;\n    }\n    /** Focusing on interactive part of spreadsheet */\n    focusTable() {\n        this.scroller.element.focus();\n    }\n    getCellByCoords(x, y) {\n        return this.sheet.getCellByCoords(x, y);\n    }\n    getCell(position) {\n        const { column, row } = position;\n        return this.data[row][column];\n    }\n    changeCellValues(position, values) {\n        const { column, row } = position;\n        this.data[row][column].changeValues(values);\n        this.renderCell(row, column);\n    }\n    changeCellStyles(position, styles) {\n        const { column, row } = position;\n        this.data[row][column].changeStyles(styles);\n        this.renderCell(row, column);\n    }\n    applyActionToRange(range, callback) {\n        const fromRow = Math.min(range.from.row, range.to.row);\n        const toRow = Math.max(range.from.row, range.to.row);\n        const fromCol = Math.min(range.from.column, range.to.column);\n        const toCol = Math.max(range.from.column, range.to.column);\n        for (let row = fromRow; row <= toRow; row++) {\n            for (let col = fromCol; col <= toCol; col++) {\n                const cell = this.data[row][col];\n                callback(cell);\n            }\n        }\n    }\n    deleteSelectedCellsValues() {\n        if (this.selection.selectedRange !== null) {\n            this.applyActionToRange(this.selection.selectedRange, (cell) => {\n                this.changeCellValues(cell.position, {\n                    displayValue: \"\",\n                    resultValue: \"\",\n                    value: \"\",\n                });\n            });\n        }\n        else {\n            if (!this.selection.selectedCell)\n                return;\n            this.changeCellValues(this.selection.selectedCell, {\n                displayValue: \"\",\n                resultValue: \"\",\n                value: \"\",\n            });\n        }\n    }\n    showEditor(position, initialString) {\n        this.editor.show(position, initialString);\n    }\n    renderSheet() {\n        this.sheet.renderSheet();\n    }\n    renderColumnsBar() {\n        this.columnsBar.renderBar();\n    }\n    renderRowsBar() {\n        this.rowsBar.renderBar();\n    }\n    renderCell(row, col) {\n        this.data[row][col].render(this);\n    }\n    loadData(data) {\n        const rowsLength = data.length;\n        const colsLength = data[0] ? this.data[0].length : 0;\n        this.data = [];\n        const formattedData = [];\n        for (let row = 0; row < rowsLength; row++) {\n            const innerRow = [];\n            for (let col = 0; col < colsLength; col++) {\n                const cell = data[row][col];\n                innerRow.push(new Cell({\n                    displayValue: cell.displayValue,\n                    position: cell.position,\n                    resultValue: cell.resultValue,\n                    value: cell.value,\n                    style: cell.style,\n                }));\n            }\n            formattedData.push(innerRow);\n        }\n        this.data = formattedData;\n        this.selection.selectedCell = null;\n        this.selection.selectedRange = null;\n        this.config = this.makeConfigFromData(formattedData, this.config.view);\n        this.cache = this.getInitialCache();\n        this.scroller.updateScrollerSize();\n        this.viewport = new Viewport(this, this.scroller.getViewportBoundlingRect());\n        this.renderSheet();\n        return this;\n    }\n    makeConfigFromData(data, view) {\n        const lastRowIdx = data.length - 1;\n        const lastColIdx = data[0] ? data[0].length : 0;\n        const rows = [];\n        for (let row = 0; row < lastRowIdx; row++) {\n            rows.push(new Row({\n                height: 40,\n                title: String(row),\n            }));\n        }\n        const columns = [];\n        for (let col = 0; col < lastColIdx; col++) {\n            columns.push(new Column({\n                width: 150,\n                title: String(col),\n            }));\n        }\n        const config = new Config({\n            view,\n            rows,\n            columns,\n            onCellClick: null,\n        });\n        return config;\n    }\n    serializeData() {\n        const rowsLength = this.data.length;\n        const colsLength = this.data[0] ? this.data[0].length : 0;\n        const cellsArray = [];\n        for (let row = 0; row < rowsLength; row++) {\n            const innerRow = [];\n            for (let col = 0; col < colsLength; col++) {\n                innerRow.push(this.data[row][col].getSerializableCell());\n            }\n            cellsArray.push(innerRow);\n        }\n        return cellsArray;\n    }\n}\nexport * from \"./modules/cache\";\nexport * from \"./modules/cell\";\nexport * from \"./modules/column\";\nexport * from \"./modules/config\";\nexport * from \"./modules/renderBox\";\nexport * from \"./modules/row\";\nexport * from \"./modules/selection\";\nexport * from \"./modules/styles\";\nexport * from \"./modules/viewport\";\nexport * from \"./utils/createData\";\n"],"names":["EventTypes","Events","root","__publicField","event","scroller","offsetX","offsetY","clickedCell","cell","selection","Selection","_b","_a","enableCallback","action","values","RenderBox","config","cellPosition","column","x","i","row","y","Editor","key","target","element","CSS_PREFIX","position","initialString","height","width","checkEqualCellSelections","selection1","selection2","Scroller","lastSelectedCell","isRangeChanged","newSelection","keysRegex","isPressedLetterKey","rect","horizontalScroller","verticalScroller","mode","scrollTop","scrollLeft","bottom","right","groupScrollers","stack","acc","curr","totalHeight","totalWidth","CellStyles","props","Position","SerializableCell","Cell","styles","selectedRange","isCellInRow","renderBox","ctx","isCellSelected","isCellInRange","Sheet","canvas","col","firstRowIdx","lastColIdx","lastRowIdx","firstColIdx","Table","container","sizes","Toolbar","toolbarElement","Config","Styles","Viewport","Column","Row","createSampleData","rows","columns","fillCellsByCoords","data","innerRow","value","createSampleConfig","rowsArr","rowItem","colsArr","colItem","makeSpreadsheetConfigAndData","CachedColumn","CachedRow","Cache","initial","rowIdx","colIdx","ColumnsBar","top","left","selectedCell","isColSelected","specialX","RowsBar","isRowSeleted","specialY","Spreadsheet","cachedCols","currentWidth","cacheCol","cachedRows","currentHeight","cacheRow","cache","content","range","callback","fromRow","toRow","fromCol","toCol","rowsLength","colsLength","formattedData","view","cellsArray"],"mappings":"oRACW,IAAAA,GACV,SAAUA,EAAY,CACnBA,EAAW,WAAgB,aAC3BA,EAAW,iBAAsB,mBACjCA,EAAW,YAAiB,aAChC,GAAGA,IAAeA,EAAa,CAAG,EAAA,EAC3B,MAAMC,CAAO,CAEhB,YAAYC,EAAM,CADlBC,EAAA,aAmCAA,EAAA,iBAAY,CAACC,EAAOC,IAAa,SAC7B,GAAID,EAAM,SAAW,EACjB,OACE,KAAA,CAAE,QAAAE,EAAS,QAAAC,CAAY,EAAAH,EACvBI,EAAc,KAAK,KAAK,gBAAgBF,EAASC,CAAO,EACxDE,EAAO,KAAK,KAAK,QAAQD,CAAW,EACpCE,EAAY,IAAIC,EACtBD,EAAU,aAAeF,EACzBE,EAAU,cAAgB,CACtB,KAAMF,EACN,GAAIA,CAAA,EAERH,EAAS,iBAAiB,EAAI,EACzB,KAAA,gBAAgBK,EAAW,EAAI,GACpCE,GAAAC,EAAA,KAAK,KAAK,QAAO,cAAjB,MAAAD,EAAA,KAAAC,EAA+BT,EAAOK,EAAI,GAE9CN,EAAA,uBAAkB,CAACO,EAAWI,EAAiB,KAAU,SACrD,KAAK,KAAK,UAAYJ,EAClBI,KACKF,GAAAC,EAAA,KAAA,KAAK,QAAO,mBAAZ,MAAAD,EAAA,KAAAC,EAA+BH,IACxC,KAAK,KAAK,cACV,KAAK,KAAK,mBACV,KAAK,KAAK,eAAc,GAvDxB,KAAK,KAAOR,CAChB,CACA,SAASa,EAAQ,CACb,OAAQA,EAAO,KAAM,CACjB,KAAKf,EAAW,WAAY,CAClB,KAAA,CAAE,MAAAI,EAAO,SAAAC,CAAa,EAAAU,EAIvB,KAAA,UAAUX,EAAOC,CAAQ,EAC9B,KACJ,CACA,KAAKL,EAAW,iBAAkB,CACxB,KAAA,CAAE,UAAAU,EAAW,eAAAI,CAAmB,EAAAC,EAIjC,KAAA,gBAAgBL,EAAWI,CAAc,EAC9C,KACJ,CACA,KAAKd,EAAW,YAAa,CACnB,KAAA,CAAE,KAAAS,EAAM,OAAAO,CAAW,EAAAD,EAIpB,KAAA,iBAAiBN,EAAMO,CAAM,EAClC,KACJ,CAIJ,CACJ,CAyBA,iBAAiBP,EAAMO,EAAQ,SAC3B,KAAK,KAAK,iBAAiBP,EAAK,SAAUO,CAAM,GAC3CJ,GAAAC,EAAA,KAAA,KAAK,QAAO,eAAZ,MAAAD,EAAA,KAAAC,EAA2BJ,EACpC,CACJ,CCvEO,MAAMQ,CAAU,CAKnB,YAAYC,EAAQC,EAAc,CAJlChB,EAAA,UACAA,EAAA,UACAA,EAAA,cACAA,EAAA,eAEI,KAAK,EAAI,KAAK,UAAUgB,EAAa,OAAQD,CAAM,EACnD,KAAK,EAAI,KAAK,UAAUC,EAAa,IAAKD,CAAM,EAChD,KAAK,MAAQA,EAAO,QAAQC,EAAa,MAAM,EAAE,MACjD,KAAK,OAASD,EAAO,KAAKC,EAAa,GAAG,EAAE,MAChD,CACA,UAAUC,EAAQF,EAAQ,CACtB,IAAIG,EAAI,EACR,QAASC,EAAI,EAAGA,EAAIF,EAAQE,IACnBD,GAAAH,EAAO,QAAQI,CAAC,EAAE,MAEpB,OAAAD,CACX,CACA,UAAUE,EAAKL,EAAQ,CACnB,IAAIM,EAAI,EACR,QAASF,EAAI,EAAGA,EAAIC,EAAKD,IAChBE,GAAAN,EAAO,KAAKI,CAAC,EAAE,OAEjB,OAAAE,CACX,CACJ,CCtBO,MAAMC,CAAO,CAGhB,YAAYvB,EAAM,CAFlBC,EAAA,gBACAA,EAAA,aAkCAA,EAAA,qBAAiBC,GAAU,CACjB,KAAA,CAAE,IAAAsB,CAAQ,EAAAtB,EAChB,OAAQsB,EAAK,CACT,IAAK,SAAU,CACX,KAAK,KAAK,EACV,KACJ,CACA,IAAK,QAAS,CACN,GAAA,CAAC,KAAK,KAAK,UAAU,aACrB,OACC,KAAA,KAAK,OAAO,SAAS,CACtB,KAAM1B,EAAW,YACjB,KAAM,KAAK,KAAK,QAAQ,KAAK,KAAK,UAAU,YAAY,EACxD,OAAQ,CACJ,MAAO,KAAK,QAAQ,MACpB,aAAc,KAAK,QAAQ,KAC/B,CAAA,CACH,EACD,KAAK,KAAK,CACd,CACJ,CAAA,GAEJG,EAAA,0BAAsBC,GAAU,CAC5B,MAAMuB,EAASvB,EAAM,OAChB,KAAK,QAAQ,SAASuB,CAAM,GAC7B,KAAK,KAAK,CACd,GA1DA,KAAK,KAAOzB,EACN,MAAA0B,EAAU,SAAS,cAAc,OAAO,EACtCA,EAAA,UAAU,IAAIC,EAAa,QAAQ,EAC3C,KAAK,QAAUD,EACf,KAAK,KAAK,CACd,CACA,MAAO,CACE,KAAA,QAAQ,MAAM,QAAU,OACxB,KAAA,QAAQ,UAAU,IAAI,MAAM,EACjC,KAAK,QAAQ,OACN,OAAA,oBAAoB,QAAS,KAAK,kBAAkB,EAC3D,KAAK,QAAQ,oBAAoB,UAAW,KAAK,aAAa,EAC9D,KAAK,KAAK,YACd,CACA,KAAKE,EAAUC,EAAe,CACpB,KAAA,CAAE,OAAAC,EAAQ,MAAAC,EAAO,EAAAZ,EAAG,EAAAG,CAAM,EAAA,IAAIP,EAAU,KAAK,KAAK,OAAQa,CAAQ,EAClErB,EAAO,KAAK,KAAK,QAAQqB,CAAQ,EAClC,KAAA,QAAQ,UAAU,OAAO,MAAM,EAC/B,KAAA,QAAQ,MAAM,IACfN,EAAI,KAAK,KAAK,SAAS,IAAM,KAAK,KAAK,iBAAmB,KACzD,KAAA,QAAQ,MAAM,KACfH,EAAI,KAAK,KAAK,SAAS,KAAO,KAAK,KAAK,aAAe,KACtD,KAAA,QAAQ,MAAM,MAAQY,EAAQ,KAC9B,KAAA,QAAQ,MAAM,OAASD,EAAS,KAChC,KAAA,QAAQ,MAAM,QAAU,QACtB,OAAA,iBAAiB,QAAS,KAAK,kBAAkB,EACxD,KAAK,QAAQ,iBAAiB,UAAW,KAAK,aAAa,EAC3D,KAAK,QAAQ,MAAQD,GAAgCtB,EAAK,MAC1D,KAAK,QAAQ,QACRsB,GACD,KAAK,QAAQ,QACrB,CA6BJ,CC9DgB,SAAAG,EAAyBC,EAAYC,EAAY,CAC7D,OAAQD,EAAW,SAAWC,EAAW,QAAUD,EAAW,MAAQC,EAAW,GACrF,CCJO,MAAMC,CAAS,CAMlB,YAAYnC,EAAM,CALlBC,EAAA,gBACAA,EAAA,yBACAA,EAAA,2BACAA,EAAA,aACAA,EAAA,mBAAc,IAuBdA,EAAA,uBAAmBC,GAAU,CACzB,GAAI,CAAC,KAAK,YACN,OACE,KAAA,CAAE,QAAAE,EAAS,QAAAC,CAAY,EAAAH,EACvBkC,EAAmB,KAAK,KAAK,gBAAgBhC,EAASC,CAAO,EACnE,IAAIgC,EAAiB,GACjB,KAAK,KAAK,UAAU,gBACpBA,EAAiB,CAACL,EAAyB,KAAK,KAAK,UAAU,cAAc,GAAII,CAAgB,EAC7FC,IACK,KAAA,KAAK,UAAU,cAAc,GAAKD,EAClC,KAAA,KAAK,OAAO,SAAS,CACtB,KAAMtC,EAAW,iBACjB,UAAW,KAAK,KAAK,UACrB,eAAgB,EAAA,CACnB,GAET,GAEJG,EAAA,qBAAgB,IAAM,CAClB,KAAK,YAAc,GACnB,MAAMqC,EAAe,CAAE,GAAG,KAAK,KAAK,SAAU,EAC1C,KAAK,KAAK,UAAU,eAChBN,EAAyB,KAAK,KAAK,UAAU,cAAc,KAAM,KAAK,KAAK,UAAU,cAAc,EAAE,IACrGM,EAAa,cAAgB,KACxB,KAAA,KAAK,OAAO,SAAS,CACtB,KAAMxC,EAAW,iBACjB,UAAWwC,EACX,eAAgB,EAAA,CACnB,GAGT,KAAK,KAAK,cACV,KAAK,KAAK,mBACV,KAAK,KAAK,eAAc,GAE5BrC,EAAA,yBAAqBC,GAAU,CAC3BA,EAAM,eAAe,EACrB,MAAM0B,EAAW,KAAK,KAAK,gBAAgB1B,EAAM,QAASA,EAAM,OAAO,EAClE,KAAA,KAAK,WAAW0B,CAAQ,CAAA,GAEjC3B,EAAA,qBAAiBC,GAAU,CAEnB,GAAA,CAAC,YAAa,aAAc,UAAW,WAAW,EAAE,SAASA,EAAM,GAAG,EAAG,CAGzE,OAFAA,EAAM,eAAe,EAChB,KAAA,KAAK,UAAU,cAAgB,KAC5BA,EAAM,IAAK,CACf,IAAK,YAAa,CACV,KAAK,KAAK,UAAU,cACpB,KAAK,KAAK,UAAU,aAAa,OAAS,IACrC,KAAA,KAAK,UAAU,aAAa,QAAU,GAG/C,KACJ,CACA,IAAK,aAAc,CACX,KAAK,KAAK,UAAU,cACpB,KAAK,KAAK,UAAU,aAAa,OAC7B,KAAK,KAAK,OAAO,QAAQ,OAAS,IACjC,KAAA,KAAK,UAAU,aAAa,QAAU,GAG/C,KACJ,CACA,IAAK,UAAW,CACR,KAAK,KAAK,UAAU,cACpB,KAAK,KAAK,UAAU,aAAa,IAAM,IAClC,KAAA,KAAK,UAAU,aAAa,KAAO,GAG5C,KACJ,CACA,IAAK,YAAa,CACV,KAAK,KAAK,UAAU,cACpB,KAAK,KAAK,UAAU,aAAa,IAC7B,KAAK,KAAK,OAAO,KAAK,OAAS,IAC9B,KAAA,KAAK,UAAU,aAAa,KAAO,GAG5C,KACJ,CACJ,CACK,KAAA,KAAK,OAAO,SAAS,CACtB,KAAMJ,EAAW,iBACjB,UAAW,KAAK,KAAK,UACrB,eAAgB,EAAA,CACnB,CACL,CAEA,MAAMyC,EAAY,kBAClB,GAAI,CAACrC,EAAM,SAAW,CAACA,EAAM,QAAS,CAElC,MAAMsC,EAAqBD,EAAU,KAAKrC,EAAM,IAAI,aAAa,EAC7D,GAAAA,EAAM,MAAQ,MAAQsC,EAAoB,CAGtC,GADJtC,EAAM,eAAe,EACjB,CAAC,KAAK,KAAK,UAAU,aACrB,OACC,KAAA,KAAK,WAAW,KAAK,KAAK,UAAU,aAAcsC,EAAqBtC,EAAM,IAAM,MAAS,CACrG,CACJ,CACIA,EAAM,MAAQ,WACdA,EAAM,eAAe,EACrB,KAAK,KAAK,4BACV,KAAK,KAAK,cACd,GAEJD,EAAA,mBAAeC,GAAU,CAChB,KAAA,KAAK,OAAO,SAAS,CACtB,KAAMJ,EAAW,WACjB,MAAAI,EACA,SAAU,IAAA,CACb,CAAA,GAELD,EAAA,oBAAe,IAAM,CACX,MAAAwC,EAAO,KAAK,2BACb,KAAA,KAAK,SAAS,aAAaA,CAAI,EACpC,KAAK,KAAK,cACV,KAAK,KAAK,mBACV,KAAK,KAAK,eAAc,GA3IxB,KAAK,KAAOzC,EACZ,KAAM,CAAE,mBAAA0C,EAAoB,SAAAvC,EAAU,iBAAAwC,CAAiB,EAAI,KAAK,iBAChE,KAAK,QAAUxC,EACf,KAAK,iBAAmBwC,EACxB,KAAK,mBAAqBD,EAC1B,KAAK,QAAQ,MAAM,OAAS,KAAK,KAAK,OAAO,KAAK,OAAS,KAC3D,KAAK,QAAQ,MAAM,MAAQ,KAAK,KAAK,OAAO,KAAK,MAAQ,KACzD,KAAK,QAAQ,MAAM,IAAM,KAAK,KAAK,iBAAmB,KACtD,KAAK,QAAQ,MAAM,KAAO,KAAK,KAAK,aAAe,KACnD,KAAK,QAAQ,SAAW,GACxB,KAAK,mBAAmB,EACxB,KAAK,QAAQ,iBAAiB,SAAU,KAAK,YAAY,EACzD,KAAK,QAAQ,iBAAiB,YAAa,KAAK,WAAW,EAC3D,KAAK,QAAQ,iBAAiB,YAAa,KAAK,eAAe,EAC/D,KAAK,QAAQ,iBAAiB,UAAW,KAAK,aAAa,EAC3D,KAAK,QAAQ,iBAAiB,WAAY,KAAK,iBAAiB,EAChE,KAAK,QAAQ,iBAAiB,UAAW,KAAK,aAAa,CAC/D,CACA,iBAAiBE,EAAM,CACnB,KAAK,YAAcA,CACvB,CAyHA,0BAA2B,CACvB,KAAM,CAAE,UAAAC,EAAW,WAAAC,GAAe,KAAK,QACjC,CAAE,OAAAhB,EAAQ,MAAAC,CAAA,EAAU,KAAK,QAAQ,wBACjCgB,EAASF,EAAYf,EACrBkB,EAAQF,EAAaf,EACpB,MAAA,CACH,IAAKc,EACL,KAAMC,EACN,OAAAC,EACA,MAAAC,CAAA,CAER,CACA,gBAAiB,CACP,MAAA7C,EAAW,SAAS,cAAc,KAAK,EACvCwC,EAAmB,SAAS,cAAc,KAAK,EAC/CD,EAAqB,SAAS,cAAc,KAAK,EACjDO,EAAiB,SAAS,cAAc,KAAK,EAC7CC,EAAQ,SAAS,cAAc,KAAK,EAC1C,OAAAP,EAAiB,MAAM,MAAQ,MAC/BA,EAAiB,MAAM,cAAgB,OACvCD,EAAmB,MAAM,cAAgB,OACzCO,EAAe,MAAM,QAAU,OAC/BC,EAAM,YAAYP,CAAgB,EAClCO,EAAM,YAAYR,CAAkB,EACpCO,EAAe,YAAYC,CAAK,EAChC,KAAK,iBAAmBP,EACxB,KAAK,mBAAqBD,EAC1BvC,EAAS,YAAY8C,CAAc,EAC1B9C,EAAA,UAAU,IAAIwB,EAAa,UAAU,EACvC,CAAE,SAAAxB,EAAU,iBAAAwC,EAAkB,mBAAAD,EACzC,CACA,iBAAkB,CACd,OAAO,KAAK,KAAK,OAAO,KAAK,OAAO,CAACS,EAAKC,KACtCD,GAAOC,EAAK,OACLD,GACR,CAAC,CACR,CACA,gBAAiB,CACb,OAAO,KAAK,KAAK,OAAO,QAAQ,OAAO,CAACA,EAAKC,KACzCD,GAAOC,EAAK,MACLD,GACR,CAAC,CACR,CACA,oBAAqB,CACX,MAAAE,EAAc,KAAK,kBACnBC,EAAa,KAAK,iBACxB,KAAK,kBAAkBD,CAAW,EAClC,KAAK,iBAAiBC,CAAU,CACpC,CACA,kBAAkBxB,EAAQ,CACjB,KAAA,iBAAiB,MAAM,OAASA,EAAS,IAClD,CACA,iBAAiBC,EAAO,CACf,KAAA,mBAAmB,MAAM,MAAQA,EAAQ,IAClD,CACJ,CC7MO,MAAMwB,CAAW,CAOpB,YAAYC,EAAO,CANnBvD,EAAA,gBAAW,IACXA,EAAA,iBAAY,SACZA,EAAA,kBAAa,SACbA,EAAA,mBAAc,SACdA,EAAA,0BAAqB,WACrBA,EAAA,yBAAoB,WAEZuD,GACO,OAAA,OAAO,KAAMA,CAAK,CAEjC,CACJ,CACO,MAAMC,CAAS,CAGlB,YAAYpC,EAAKH,EAAQ,CAFzBjB,EAAA,YACAA,EAAA,eAEI,KAAK,IAAMoB,EACX,KAAK,OAASH,CAClB,CACJ,CACO,MAAMwC,CAAiB,CAM1B,YAAYF,EAAO,CALnBvD,EAAA,cACAA,EAAA,qBACAA,EAAA,oBACAA,EAAA,iBACAA,EAAA,cAEI,KAAK,MAAQuD,EAAM,MACnB,KAAK,aAAeA,EAAM,aAC1B,KAAK,YAAcA,EAAM,YACzB,KAAK,SAAWA,EAAM,SACtB,KAAK,MAAQA,EAAM,KACvB,CACJ,CACO,MAAMG,CAAK,CASd,YAAYH,EAAO,CAPnBvD,EAAA,cAEAA,EAAA,qBAEAA,EAAA,oBACAA,EAAA,iBACAA,EAAA,aAAQ,MAEJ,KAAK,MAAQuD,EAAM,MACnB,KAAK,aAAeA,EAAM,aAC1B,KAAK,YAAcA,EAAM,YACzB,KAAK,SAAWA,EAAM,SACtB,KAAK,MAAQA,EAAM,KACvB,CACA,qBAAsB,CAQX,OAPM,IAAIE,EAAiB,CAC9B,aAAc,KAAK,aACnB,SAAU,KAAK,SACf,YAAa,KAAK,YAClB,MAAO,KAAK,MACZ,MAAO,KAAK,KAAA,CACf,CAEL,CACA,aAAaE,EAAQ,CACjB,KAAK,MAAQA,CACjB,CACA,aAAa9C,EAAQ,CACV,OAAA,OAAO,KAAMA,CAAM,CAC9B,CACA,cAAcd,EAAM,CAChB,KAAM,CAAE,OAAAkB,EAAQ,IAAAG,GAAQ,KAAK,SACvB,CAAE,cAAAwC,CAAc,EAAI7D,EAAK,UAC/B,GAAI,CAAC6D,EACM,MAAA,GACX,MAAMC,EAAczC,GAAO,KAAK,IAAIwC,EAAc,KAAK,IAAKA,EAAc,GAAG,GAAG,GAC5ExC,GAAO,KAAK,IAAIwC,EAAc,GAAG,IAAKA,EAAc,KAAK,GAAG,EAGhE,OAFoB3C,GAAU,KAAK,IAAI2C,EAAc,KAAK,OAAQA,EAAc,GAAG,MAAM,GACrF3C,GAAU,KAAK,IAAI2C,EAAc,GAAG,OAAQA,EAAc,KAAK,MAAM,GACnDC,CAC1B,CACA,OAAO9D,EAAM,OACT,MAAM+D,EAAY,IAAIhD,EAAUf,EAAK,OAAQ,KAAK,QAAQ,EACtD,GAAA,CAAE,EAAAmB,EAAG,EAAAG,CAAM,EAAAyC,EACT,KAAA,CAAE,OAAAjC,EAAQ,MAAAC,CAAU,EAAAgC,EACpB,CAAE,IAAAC,CAAQ,EAAAhE,EACViE,IAAiBtD,EAAAX,EAAK,UAAU,eAAf,YAAAW,EAA6B,OAAQ,KAAK,SAAS,KACtEX,EAAK,UAAU,aAAa,SAAW,KAAK,SAAS,OACnDkE,EAAgB,KAAK,cAAclE,CAAI,EAC7CsB,GAAKtB,EAAK,SAAS,IACnBmB,GAAKnB,EAAK,SAAS,KACnB,MAAM4D,EAAS,KAAK,OAAS5D,EAAK,OAAO,MACzCgE,EAAI,UAAU7C,EAAGG,EAAGS,EAAOD,CAAM,EACjCkC,EAAI,UACAC,GAAkBC,EACZN,EAAO,mBACPA,EAAO,WACjBI,EAAI,YAAc,QAClBA,EAAI,SAAS7C,EAAGG,EAAGS,EAAQ,EAAGD,EAAS,CAAC,EACxCkC,EAAI,WAAW7C,EAAGG,EAAGS,EAAOD,CAAM,EAClCkC,EAAI,UACAC,GAAkBC,EACZN,EAAO,kBACPA,EAAO,UACjBI,EAAI,UAAY,OACZA,EAAA,KAAO,GAAGJ,EAAO,QAAQ,WAC7BI,EAAI,aAAe,SACnBA,EAAI,SAAS,KAAK,aAAc7C,EAAI,EAAGG,EAAIQ,EAAS,CAAC,CACzD,CACJ,CCtGO,MAAMqC,CAAM,CAIf,YAAYnE,EAAM,CAHlBC,EAAA,gBACAA,EAAA,YACAA,EAAA,aAEI,KAAK,KAAOD,EACN,MAAAoE,EAAS,SAAS,cAAc,QAAQ,EACvCA,EAAA,UAAU,IAAIzC,EAAa,OAAO,EAEzCyC,EAAO,OAAS,KAAK,KAAK,OAAO,KAAK,OACtCA,EAAO,MAAQ,KAAK,KAAK,OAAO,KAAK,MACrCA,EAAO,MAAM,MAAQ,KAAK,KAAK,OAAO,KAAK,MAAQ,KACnDA,EAAO,MAAM,OAAS,KAAK,KAAK,OAAO,KAAK,OAAS,KACrDA,EAAO,MAAM,KAAO,MACpB,KAAK,QAAUA,EACf,MAAMJ,EAAM,KAAK,QAAQ,WAAW,IAAI,EACxC,GAAI,CAACA,EACK,MAAA,IAAI,MAAM,8BAA8B,EAClD,KAAK,IAAMA,CACf,CACA,gBAAgB7C,EAAGG,EAAG,CAClB,IAAID,EAAM,EACNS,EAAS,EACb,KAAOA,GAAUR,IACbQ,GAAU,KAAK,KAAK,OAAO,KAAKT,CAAG,EAAE,OACjC,EAAAS,GAAUR,KAEdD,IAEJ,IAAIgD,EAAM,EACNtC,EAAQ,EACZ,KAAOA,GAASZ,IACZY,GAAS,KAAK,KAAK,OAAO,QAAQsC,CAAG,EAAE,MACnC,EAAAtC,GAASZ,KAEbkD,IAEG,OAAA,IAAIZ,EAASpC,EAAKgD,CAAG,CAChC,CACA,WAAWzC,EAAU,CACX,KAAA,CAAE,OAAAV,EAAQ,IAAAG,CAAQ,EAAAO,EACnB,KAAA,KAAK,KAAKP,CAAG,EAAEH,CAAM,EAAE,OAAO,KAAK,IAAI,CAChD,CACA,aAAc,CACJ,MAAAoD,EAAc,KAAK,KAAK,SAAS,SACjCC,EAAa,KAAK,KAAK,SAAS,QAAU,EAC1CC,EAAa,KAAK,KAAK,SAAS,QAAU,EAC1CC,EAAc,KAAK,KAAK,SAAS,SACvC,QAASpD,EAAMiD,EAAajD,GAAOmD,EAAYnD,IAC3C,QAASgD,EAAMI,EAAaJ,GAAOE,GAC3B,GAAC,KAAK,KAAK,OAAO,QAAQF,CAAG,GAAK,CAAC,KAAK,KAAK,OAAO,KAAKhD,CAAG,GADrBgD,IAG3C,KAAK,WAAW,CAAE,OAAQA,EAAK,IAAAhD,CAAK,CAAA,CAGhD,CACJ,CC3DO,MAAMqD,CAAM,CAGf,YAAY1E,EAAM,CAFlBC,EAAA,gBACAA,EAAA,aAEI,KAAK,KAAOD,EACN,MAAA2E,EAAY,SAAS,cAAc,KAAK,EACpCA,EAAA,UAAU,IAAIhD,EAAa,uBAAuB,EAC5D,KAAK,QAAUgD,EACV,KAAA,mBAAmB,KAAK,KAAK,SAAS,CAC/C,CACA,mBAAmBC,EAAO,CAChB,KAAA,CAAE,OAAA9C,EAAQ,MAAAC,CAAU,EAAA6C,EAC1B,KAAK,QAAQ,MAAM,MAAQ7C,EAAQ,KAAK,KAAK,aAAe,KAC5D,KAAK,QAAQ,MAAM,OAASD,EAAS,KAAK,KAAK,iBAAmB,IACtE,CACJ,CChBO,MAAM+C,CAAQ,CAIjB,YAAY7E,EAAM,CAHlBC,EAAA,gBACAA,EAAA,aACAA,EAAA,cAAS,GAEL,KAAK,KAAOD,EACN,MAAA8E,EAAiB,SAAS,cAAc,KAAK,EACpCA,EAAA,UAAU,IAAInD,EAAa,SAAS,EACnD,KAAK,QAAUmD,CACnB,CACJ,CCXO,MAAMC,CAAO,CAUhB,YAAYvB,EAAO,CATnBvD,EAAA,aACAA,EAAA,gBACAA,EAAA,YAAO,CACH,MAAO,IACP,OAAQ,GAAA,GAEZA,EAAA,mBAAc,MACdA,EAAA,wBAAmB,MACnBA,EAAA,oBAAe,MAEX,KAAK,QAAUuD,EAAM,QACrB,KAAK,KAAOA,EAAM,KAClB,KAAK,KAAOA,EAAM,KACb,KAAA,YAAcA,EAAM,aAAe,KACnC,KAAA,iBAAmBA,EAAM,mBAAqB,KAC9C,KAAA,aAAeA,EAAM,cAAgB,IAC9C,CACJ,CClBO,MAAM/C,CAAU,CAAhB,cACHR,EAAA,oBAAe,MACfA,EAAA,qBAAgB,MACpB,CCFO,MAAM+E,CAAO,CAEhB,aAAc,CADd/E,EAAA,cAES,KAAA,MAAQ,IAAIsD,CACrB,CACJ,CCNO,MAAM0B,CAAS,CAUlB,YAAYjF,EAAMwD,EAAO,CATzBvD,EAAA,aACAA,EAAA,YACAA,EAAA,aACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,gBAEI,KAAK,KAAOD,EACZ,KAAK,IAAMwD,EAAM,IACjB,KAAK,KAAOA,EAAM,KAClB,KAAK,MAAQA,EAAM,MACnB,KAAK,OAASA,EAAM,OACf,KAAA,SAAW,KAAK,cAChB,KAAA,QAAU,KAAK,cAAY;AAC3B,KAAA,SAAW,KAAK,cAAY;AAC5B,KAAA,QAAU,KAAK,aACpB,KAAK,aAAa,CACd,IAAK,EACL,KAAM,EACN,MAAO,KAAK,KAAK,UAAU,MAC3B,OAAQ,KAAK,KAAK,UAAU,MAAA,CAC/B,CACL,CACA,aAAaA,EAAO,CAChB,KAAK,IAAMA,EAAM,IACjB,KAAK,KAAOA,EAAM,KAClB,KAAK,MAAQA,EAAM,MACnB,KAAK,OAASA,EAAM,OACf,KAAA,SAAW,KAAK,cAChB,KAAA,QAAU,KAAK,aACf,KAAA,SAAW,KAAK,cAChB,KAAA,QAAU,KAAK,YACxB,CAEA,aAAc,CAEH,OADQ,KAAK,KAAK,MAAM,eAAe,KAAK,GAAG,CAE1D,CACA,YAAa,CAEF,OADQ,KAAK,KAAK,MAAM,eAAe,KAAK,MAAM,CAE7D,CACA,aAAc,CAEH,OADQ,KAAK,KAAK,MAAM,kBAAkB,KAAK,IAAI,CAE9D,CACA,YAAa,CAEF,OADQ,KAAK,KAAK,MAAM,kBAAkB,KAAK,KAAK,CAE/D,CACJ,CCtDO,MAAM0B,CAAO,CAGhB,YAAY1B,EAAO,CAFnBvD,EAAA,cACAA,EAAA,cAEI,KAAK,MAAQuD,EAAM,MACnB,KAAK,MAAQA,EAAM,KACvB,CACJ,CCPO,MAAM2B,CAAI,CAGb,YAAY3B,EAAO,CAFnBvD,EAAA,eACAA,EAAA,cAEI,KAAK,OAASuD,EAAM,OACpB,KAAK,MAAQA,EAAM,KACvB,CACJ,CCHO,SAAS4B,EAAiBC,EAAMC,EAASC,EAAoB,GAAO,CACvE,MAAMC,EAAO,CAAA,EACb,QAASnE,EAAM,EAAGA,GAAOgE,EAAMhE,IAAO,CAClC,MAAMoE,EAAW,CAAA,EACjB,QAASpB,EAAM,EAAGA,GAAOiB,EAASjB,IAAO,CACrC,MAAMqB,EAAQH,EAAoB,GAAGlE,CAAG,IAAIgD,CAAG,GAAK,GAC9C9D,EAAO,IAAIoD,EAAK,CAClB,aAAc+B,EACd,YAAaA,EACb,MAAAA,EACA,SAAU,CACN,OAAQrB,EACR,IAAAhD,CACJ,EACA,MAAO,IAAA,CACV,EACDoE,EAAS,KAAKlF,CAAI,CACtB,CACAiF,EAAK,KAAKC,CAAQ,CACtB,CACO,OAAAD,CACX,CACgB,SAAAG,EAAmBN,EAAMC,EAAS,CAC9C,MAAMM,EAAU,CAAA,EAChB,QAAS,EAAI,EAAG,GAAKP,EAAM,IAAK,CACtB,MAAAQ,EAAU,IAAIV,EAAI,CACpB,OAAQ,GACR,MAAO,OAAO,CAAC,CAAA,CAClB,EACDS,EAAQ,KAAKC,CAAO,CACxB,CACA,MAAMC,EAAU,CAAA,EAChB,QAAS,EAAI,EAAG,GAAKR,EAAS,IAAK,CACzB,MAAAS,EAAU,IAAIb,EAAO,CACvB,MAAO,OAAO,CAAC,EACf,MAAO,GAAA,CACV,EACDY,EAAQ,KAAKC,CAAO,CACxB,CASO,OARQ,IAAIhB,EAAO,CACtB,QAASe,EACT,KAAMF,EACN,KAAM,CACF,OAAQ,IACR,MAAO,GACX,CAAA,CACH,CAEL,CACgB,SAAAI,EAA6BX,EAAMC,EAAS,CAClD,MAAAE,EAAOJ,EAAiBC,EAAMC,CAAO,EACrCtE,EAAS2E,EAAmBN,EAAMC,CAAO,EACxC,MAAA,CAAE,KAAAE,EAAM,OAAAxE,EACnB,CCzDO,MAAMiF,CAAa,CAGtB,YAAYzC,EAAO,CAFnBvD,EAAA,aACAA,EAAA,eAEI,KAAK,KAAOuD,EAAM,KAClB,KAAK,OAASA,EAAM,MACxB,CACJ,CACO,MAAM0C,CAAU,CAGnB,YAAY1C,EAAO,CAFnBvD,EAAA,aACAA,EAAA,eAEI,KAAK,KAAOuD,EAAM,KAClB,KAAK,OAASA,EAAM,MACxB,CACJ,CACO,MAAM2C,CAAM,CAGf,YAAYC,EAAS,CAFrBnG,EAAA,gBACAA,EAAA,aAEI,KAAK,QAAUmG,EAAQ,QACvB,KAAK,KAAOA,EAAQ,IACxB,CACA,eAAe9E,EAAG,CACd,IAAI+E,EAAS,EACb,QAASjF,EAAI,EAAGA,EAAI,KAAK,KAAK,OAAQA,IAClC,GAAIE,GAAK,KAAK,KAAKF,CAAC,EAAE,KAAM,CAEfiF,EAAAjF,EACT,KACJ,CAEG,OAAAiF,CACX,CACA,kBAAkBlF,EAAG,CACjB,IAAImF,EAAS,EACb,QAASlF,EAAI,EAAGA,EAAI,KAAK,QAAQ,OAAQA,IACrC,GAAID,GAAK,KAAK,QAAQC,CAAC,EAAE,KAAM,CAElBkF,EAAAlF,EACT,KACJ,CAEG,OAAAkF,CACX,CACJ,CC5CO,MAAMC,CAAW,CAOpB,YAAYvG,EAAM,CANlBC,EAAA,gBACAA,EAAA,aACAA,EAAA,cAAS,IACTA,EAAA,cAEAA,EAAA,YAEI,KAAK,KAAOD,EACP,KAAA,QAAU,KAAK,gBACpB,MAAMgE,EAAM,KAAK,QAAQ,WAAW,IAAI,EACxC,GAAI,CAACA,EACK,MAAA,IAAI,MAAM,8BAA8B,EAClD,KAAK,IAAMA,EACN,KAAA,MAAQ,KAAK,KAAK,UAAU,KACrC,CACA,eAAgB,CACN,MAAAtC,EAAU,SAAS,cAAc,QAAQ,EAC/C,OAAAA,EAAQ,MAAM,SAAW,WACjBA,EAAA,MAAM,OAAS,KAAK,OAAS,KACrCA,EAAQ,MAAM,MAAQ,KAAK,KAAK,UAAU,MAAQ,KAClDA,EAAQ,MAAM,QAAU,QACxBA,EAAQ,MAAM,WAAa,kBAEnBA,EAAA,MAAQ,KAAK,KAAK,UAAU,MACpCA,EAAQ,OAAS,KAAK,OACfA,CACX,CACA,mBAAmB8E,EAAKC,EAAM,CACrB,KAAA,QAAQ,MAAM,IAAMD,EAAM,KAC1B,KAAA,QAAQ,MAAM,KAAOC,EAAO,IACrC,CACA,iBAAiBvF,EAAQ,CACrB,KAAM,CAAE,aAAAwF,EAAc,cAAA7C,CAAc,EAAI,KAAK,KAAK,UAC9C,OAAA6C,GAAgBA,EAAa,SAAWxF,EACjC,GACP2C,EACgB3C,GACZ,KAAK,IAAI2C,EAAc,KAAK,OAAQA,EAAc,GAAG,MAAM,GAC3D3C,GAAU,KAAK,IAAI2C,EAAc,KAAK,OAAQA,EAAc,GAAG,MAAM,EAGtE,EACX,CASA,WAAW3C,EAAQ6C,EAAW,CACpB,KAAA,CAAE,MAAAhC,EAAO,EAAAZ,CAAM,EAAA4C,EACrB,KAAK,IAAI,UAAY,QACrB,KAAK,IAAI,UAAY,SACrB,KAAK,IAAI,aAAe,SACxB,KAAK,IAAI,KAAO,aAChB,KAAK,IAAI,SAAS,KAAK,KAAK,OAAO,QAAQ7C,CAAM,EAAE,MAAOC,EAAIY,EAAQ,EAAI,KAAK,KAAK,SAAS,KAAM,EAAI,KAAK,OAAS,CAAC,CAC1H,CACA,WAAWb,EAAQ6C,EAAW,CACpB,KAAA,CAAE,MAAAhC,EAAO,EAAAZ,CAAM,EAAA4C,EACf4C,EAAgB,KAAK,iBAAiBzF,CAAM,EAClD,KAAK,IAAI,UAAYyF,EACf,KAAK,KAAK,OAAO,MAAM,mBACvB,QACN,KAAK,IAAI,YAAc,QACvB,KAAK,IAAI,UAAY,EACrB,MAAMC,EAAWzF,EAAI,KAAK,KAAK,SAAS,KACxC,KAAK,IAAI,SAASyF,EAAW,EAAG,EAAG7E,EAAO,KAAK,MAAM,EACrD,KAAK,IAAI,WAAW6E,EAAW,EAAG,EAAG7E,EAAO,KAAK,MAAM,CAC3D,CACA,mBAAmBb,EAAQ,CACvB,MAAM6C,EAAY,IAAIhD,EAAU,KAAK,KAAK,OAAQ,CAC9C,IAAK,EACL,OAAAG,CAAA,CACH,EACI,KAAA,WAAWA,EAAQ6C,CAAS,EAC5B,KAAA,WAAW7C,EAAQ6C,CAAS,CACrC,CACA,WAAY,CACR,MAAMQ,EAAa,KAAK,KAAK,SAAS,QAAU,EAC1CE,EAAc,KAAK,KAAK,SAAS,SACvC,KAAK,IAAI,YACT,KAAK,IAAI,YAAc,QACvB,KAAK,IAAI,UAAY,EAChB,KAAA,IAAI,OAAO,EAAG,CAAC,EACpB,KAAK,IAAI,OAAO,EAAG,KAAK,MAAM,EAC9B,KAAK,IAAI,YACT,KAAK,IAAI,SACT,QAASJ,EAAMI,EAAaJ,GAAOE,GAC1B,KAAK,KAAK,OAAO,QAAQF,CAAG,EADUA,IAG3C,KAAK,mBAAmBA,CAAG,CAEnC,CACJ,CChGO,MAAMwC,CAAQ,CAOjB,YAAY7G,EAAM,CANlBC,EAAA,gBACAA,EAAA,YACAA,EAAA,aACAA,EAAA,aAAQ,IACRA,EAAA,eACAA,EAAA,qBAAgB,GAEZ,KAAK,KAAOD,EACP,KAAA,QAAU,KAAK,gBACpB,MAAMgE,EAAM,KAAK,QAAQ,WAAW,IAAI,EACxC,GAAI,CAACA,EACK,MAAA,IAAI,MAAM,8BAA8B,EAClD,KAAK,IAAMA,EACN,KAAA,OAAS,KAAK,KAAK,UAAU,MACtC,CACA,eAAgB,CACN,MAAAtC,EAAU,SAAS,cAAc,QAAQ,EAC/C,OAAAA,EAAQ,MAAM,SAAW,WACzBA,EAAQ,MAAM,OAAS,KAAK,KAAK,UAAU,OAAS,KAC5CA,EAAA,MAAM,MAAQ,KAAK,MAAQ,KACnCA,EAAQ,MAAM,QAAU,QACxBA,EAAQ,MAAM,UAAY,kBAE1BA,EAAQ,MAAQ,KAAK,MACbA,EAAA,OAAS,KAAK,KAAK,UAAU,OAC9BA,CACX,CACA,mBAAmB8E,EAAKC,EAAM,CACrB,KAAA,QAAQ,MAAM,IAAMD,EAAM,KAC1B,KAAA,QAAQ,MAAM,KAAOC,EAAO,IACrC,CACA,cAAcpF,EAAK,CACf,KAAM,CAAE,aAAAqF,EAAc,cAAA7C,CAAc,EAAI,KAAK,KAAK,UAC9C,OAAA6C,GAAgBA,EAAa,MAAQrF,EAC9B,GACPwC,EACgBxC,GAAO,KAAK,IAAIwC,EAAc,KAAK,IAAKA,EAAc,GAAG,GAAG,GACxExC,GAAO,KAAK,IAAIwC,EAAc,KAAK,IAAKA,EAAc,GAAG,GAAG,EAG7D,EACX,CACA,WAAWxC,EAAK0C,EAAW,CACjB,KAAA,CAAE,EAAAzC,EAAG,OAAAQ,CAAW,EAAAiC,EACtB,KAAK,IAAI,UAAY,QACrB,KAAK,IAAI,UAAY,SACrB,KAAK,IAAI,aAAe,SACxB,KAAK,IAAI,KAAO,aAChB,KAAK,IAAI,SAAS,KAAK,KAAK,OAAO,KAAK1C,CAAG,EAAE,MAAO,KAAK,MAAQ,EAAGC,EAAI,KAAK,KAAK,SAAS,IAAMQ,EAAS,CAAC,CAC/G,CACA,WAAWZ,EAAQ6C,EAAW,CACpB,KAAA,CAAE,EAAAzC,EAAG,OAAAQ,CAAW,EAAAiC,EAChB+C,EAAe,KAAK,cAAc5F,CAAM,EAC9C,KAAK,IAAI,UAAY4F,EACf,KAAK,KAAK,OAAO,MAAM,mBACvB,QACN,KAAK,IAAI,YAAc,QAClB,KAAA,IAAI,UAAY,KAAK,cAC1B,MAAMC,EAAWzF,EAAI,KAAK,KAAK,SAAS,IACxC,KAAK,IAAI,SAAS,EAAGyF,EAAW,EAAG,KAAK,MAAOjF,CAAM,EACrD,KAAK,IAAI,WAAW,EAAGiF,EAAW,EAAG,KAAK,MAAOjF,CAAM,CAC3D,CACA,gBAAgBT,EAAK,CACjB,MAAM0C,EAAY,IAAIhD,EAAU,KAAK,KAAK,OAAQ,CAC9C,OAAQ,EACR,IAAAM,CAAA,CACH,EACI,KAAA,WAAWA,EAAK0C,CAAS,EACzB,KAAA,WAAW1C,EAAK0C,CAAS,CAClC,CACA,WAAY,CACR,MAAMS,EAAa,KAAK,KAAK,SAAS,QAAU,EAC1CF,EAAc,KAAK,KAAK,SAAS,SACvC,KAAK,IAAI,YACJ,KAAA,IAAI,OAAO,EAAG,CAAC,EACpB,KAAK,IAAI,YAAc,QACvB,KAAK,IAAI,UAAY,GAChB,KAAA,IAAI,OAAO,GAAI,CAAC,EACrB,KAAK,IAAI,YACT,KAAK,IAAI,SACT,QAASjD,EAAMiD,EAAajD,GAAOmD,GAC1B,KAAK,KAAK,OAAO,KAAKnD,CAAG,EADaA,IAG3C,KAAK,gBAAgBA,CAAG,CAEhC,CACJ,CCtEO,MAAMM,EAAa,aAC1B,MAAqBqF,CAAY,CAe7B,YAAYvF,EAAQ+B,EAAO,CAd3BvD,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,eAEU,MAAAuF,EAAOJ,EAAiB,GAAI,EAAE,EAC9BpE,EAAS,KAAK,mBAAmBwE,GAAMhC,GAAA,YAAAA,EAAO,OAAQ,CAAE,OAAQ,IAAK,MAAO,GAAK,CAAA,EACnFA,GAAA,MAAAA,EAAO,OACPxC,EAAO,KAAOwC,EAAM,MAEnB,KAAA,OAAS,IAAIuB,EAAO/D,CAAM,EAC1B,KAAA,OAAO,aAAcwC,GAAA,YAAAA,EAAO,cAAe,KAC3C,KAAA,OAAO,kBAAmBA,GAAA,YAAAA,EAAO,oBAAqB,KACtD,KAAA,OAAO,cAAeA,GAAA,YAAAA,EAAO,eAAgB,KAC7C,KAAA,QAAU,IAAIqD,EAAQ,IAAI,EAC1B,KAAA,WAAa,IAAIN,EAAW,IAAI,EAChC,KAAA,MAAQ,IAAIpC,EAAM,IAAI,EACtB,KAAA,MAAQ,IAAIO,EAAM,IAAI,EACtB,KAAA,SAAW,IAAIvC,EAAS,IAAI,EAC5B,KAAA,QAAU,IAAI0C,EAAQ,IAAI,EAC1B,KAAA,OAAS,IAAItD,EAAO,IAAI,EACxB,KAAA,MAAQ,KAAK,kBAClB,KAAK,SAAW,IAAI0D,EAAS,KAAM,KAAK,SAAS,0BAA0B,EACtE,KAAA,UAAY,IAAIxE,EAChB,KAAA,OAAS,IAAIV,EAAO,IAAI,EAC7B,KAAK,KAAOyF,EACP,KAAA,OAAS,IAAIR,EAClB,KAAK,eAAe,EACpB,KAAK,qBAAqB,EAC1B,KAAK,oBAAoBvD,CAAM,EAC/B,KAAK,YAAY,EACjB,KAAK,iBAAiB,EACtB,KAAK,cAAc,CACvB,CACA,oBAAqB,CACjB,MAAM+E,EAAM,KAAK,WAAW,OAAS,KAAK,QAAQ,OAC5CC,EAAO,EACR,KAAA,QAAQ,mBAAmBD,EAAKC,CAAI,CAC7C,CACA,uBAAwB,CACd,MAAAD,EAAM,KAAK,QAAQ,OACnBC,EAAO,KAAK,QAAQ,MAClB,QAAA,IAAID,EAAKC,CAAI,EAChB,KAAA,WAAW,mBAAmBD,EAAKC,CAAI,CAChD,CACA,sBAAuB,CACnB,KAAK,mBAAmB,EACxB,KAAK,sBAAsB,CAC/B,CACA,iBAAkB,CACd,MAAMQ,EAAa,CAAA,EACnB,IAAIC,EAAe,EACV,QAAA9F,EAAI,EAAGA,GAAK,KAAK,OAAO,QAAQ,OAAS,EAAGA,IAAK,CACtD,MAAMiD,EAAM,KAAK,OAAO,QAAQjD,CAAC,EACjC8F,GAAgB7C,EAAI,MACd,MAAA8C,EAAW,IAAIlB,EAAa,CAC9B,KAAMiB,EACN,OAAQ9F,CAAA,CACX,EACD6F,EAAW,KAAKE,CAAQ,CAC5B,CACA,MAAMC,EAAa,CAAA,EACnB,IAAIC,EAAgB,EACX,QAAAjG,EAAI,EAAGA,GAAK,KAAK,OAAO,KAAK,OAAS,EAAGA,IAAK,CACnD,MAAMC,EAAM,KAAK,OAAO,KAAKD,CAAC,EAC9BiG,GAAiBhG,EAAI,OACf,MAAAiG,EAAW,IAAIpB,EAAU,CAC3B,KAAMmB,EACN,OAAQjG,CAAA,CACX,EACDgG,EAAW,KAAKE,CAAQ,CAC5B,CACM,MAAAC,EAAQ,IAAIpB,EAAM,CACpB,QAASc,EACT,KAAMG,CAAA,CACT,EACO,eAAA,IAAI,UAAWG,CAAK,EACpB,QAAA,IAAI,WAAY,KAAK,MAAM,EAC5BA,CACX,CACA,gBAAiB,CACP,MAAAC,EAAU,SAAS,cAAc,KAAK,EACpCA,EAAA,MAAM,IAAM,KAAK,iBAAmB,KACpCA,EAAA,MAAM,KAAO,KAAK,aAAe,KACjCA,EAAA,YAAY,KAAK,MAAM,OAAO,EAC9BA,EAAA,UAAU,IAAI7F,EAAa,SAAS,EAC5C,KAAK,MAAM,QAAQ,YAAY,KAAK,QAAQ,OAAO,EACnD,KAAK,MAAM,QAAQ,YAAY,KAAK,QAAQ,OAAO,EACnD,KAAK,MAAM,QAAQ,YAAY,KAAK,WAAW,OAAO,EACjD,KAAA,MAAM,QAAQ,YAAY6F,CAAO,EACtC,KAAK,MAAM,QAAQ,YAAY,KAAK,SAAS,OAAO,EACpD,KAAK,MAAM,QAAQ,OAAO,KAAK,OAAO,OAAO,CACjD,CAKA,SAAU,CACD,KAAA,MAAM,QAAQ,QACvB,CACA,oBAAoB/F,EAAQ,CACpB,GAAA,OAAOA,GAAW,SAAU,CACtB,MAAAC,EAAU,SAAS,cAAcD,CAAM,EAC7C,GAAI,CAACC,EACK,MAAA,IAAI,MAAM,yBAAyBD,CAAM;AAAA,sBAA+C,EACzFC,GAAA,MAAAA,EAAA,YAAY,KAAK,MAAM,QACpC,CACID,aAAkB,aACXA,EAAA,OAAO,KAAK,MAAM,OAAO,CAExC,CAKA,IAAI,KAAM,CACN,OAAO,KAAK,MAAM,GACtB,CACA,IAAI,WAAY,CACZ,OAAO,KAAK,OAAO,IACvB,CACA,IAAI,kBAAmB,CACnB,OAAO,KAAK,WAAW,MAC3B,CACA,IAAI,cAAe,CACf,OAAO,KAAK,QAAQ,KACxB,CACA,IAAI,eAAgB,CAChB,OAAO,KAAK,QAAQ,MACxB,CAEA,YAAa,CACJ,KAAA,SAAS,QAAQ,OAC1B,CACA,gBAAgBN,EAAGG,EAAG,CAClB,OAAO,KAAK,MAAM,gBAAgBH,EAAGG,CAAC,CAC1C,CACA,QAAQM,EAAU,CACR,KAAA,CAAE,OAAAV,EAAQ,IAAAG,CAAQ,EAAAO,EACxB,OAAO,KAAK,KAAKP,CAAG,EAAEH,CAAM,CAChC,CACA,iBAAiBU,EAAUd,EAAQ,CACzB,KAAA,CAAE,OAAAI,EAAQ,IAAAG,CAAQ,EAAAO,EACxB,KAAK,KAAKP,CAAG,EAAEH,CAAM,EAAE,aAAaJ,CAAM,EACrC,KAAA,WAAWO,EAAKH,CAAM,CAC/B,CACA,iBAAiBU,EAAUgC,EAAQ,CACzB,KAAA,CAAE,OAAA1C,EAAQ,IAAAG,CAAQ,EAAAO,EACxB,KAAK,KAAKP,CAAG,EAAEH,CAAM,EAAE,aAAa0C,CAAM,EACrC,KAAA,WAAWvC,EAAKH,CAAM,CAC/B,CACA,mBAAmBuG,EAAOC,EAAU,CAC1B,MAAAC,EAAU,KAAK,IAAIF,EAAM,KAAK,IAAKA,EAAM,GAAG,GAAG,EAC/CG,EAAQ,KAAK,IAAIH,EAAM,KAAK,IAAKA,EAAM,GAAG,GAAG,EAC7CI,EAAU,KAAK,IAAIJ,EAAM,KAAK,OAAQA,EAAM,GAAG,MAAM,EACrDK,EAAQ,KAAK,IAAIL,EAAM,KAAK,OAAQA,EAAM,GAAG,MAAM,EACzD,QAASpG,EAAMsG,EAAStG,GAAOuG,EAAOvG,IAClC,QAASgD,EAAMwD,EAASxD,GAAOyD,EAAOzD,IAAO,CACzC,MAAM9D,EAAO,KAAK,KAAKc,CAAG,EAAEgD,CAAG,EAC/BqD,EAASnH,CAAI,CACjB,CAER,CACA,2BAA4B,CACpB,GAAA,KAAK,UAAU,gBAAkB,KACjC,KAAK,mBAAmB,KAAK,UAAU,cAAgBA,GAAS,CACvD,KAAA,iBAAiBA,EAAK,SAAU,CACjC,aAAc,GACd,YAAa,GACb,MAAO,EAAA,CACV,CAAA,CACJ,MAEA,CACG,GAAA,CAAC,KAAK,UAAU,aAChB,OACC,KAAA,iBAAiB,KAAK,UAAU,aAAc,CAC/C,aAAc,GACd,YAAa,GACb,MAAO,EAAA,CACV,CACL,CACJ,CACA,WAAWqB,EAAUC,EAAe,CAC3B,KAAA,OAAO,KAAKD,EAAUC,CAAa,CAC5C,CACA,aAAc,CACV,KAAK,MAAM,aACf,CACA,kBAAmB,CACf,KAAK,WAAW,WACpB,CACA,eAAgB,CACZ,KAAK,QAAQ,WACjB,CACA,WAAWR,EAAKgD,EAAK,CACjB,KAAK,KAAKhD,CAAG,EAAEgD,CAAG,EAAE,OAAO,IAAI,CACnC,CACA,SAASmB,EAAM,CACX,MAAMuC,EAAavC,EAAK,OAClBwC,EAAaxC,EAAK,CAAC,EAAI,KAAK,KAAK,CAAC,EAAE,OAAS,EACnD,KAAK,KAAO,GACZ,MAAMyC,EAAgB,CAAA,EACtB,QAAS5G,EAAM,EAAGA,EAAM0G,EAAY1G,IAAO,CACvC,MAAMoE,EAAW,CAAA,EACjB,QAASpB,EAAM,EAAGA,EAAM2D,EAAY3D,IAAO,CACvC,MAAM9D,EAAOiF,EAAKnE,CAAG,EAAEgD,CAAG,EACjBoB,EAAA,KAAK,IAAI9B,EAAK,CACnB,aAAcpD,EAAK,aACnB,SAAUA,EAAK,SACf,YAAaA,EAAK,YAClB,MAAOA,EAAK,MACZ,MAAOA,EAAK,KACf,CAAA,CAAC,CACN,CACA0H,EAAc,KAAKxC,CAAQ,CAC/B,CACA,YAAK,KAAOwC,EACZ,KAAK,UAAU,aAAe,KAC9B,KAAK,UAAU,cAAgB,KAC/B,KAAK,OAAS,KAAK,mBAAmBA,EAAe,KAAK,OAAO,IAAI,EAChE,KAAA,MAAQ,KAAK,kBAClB,KAAK,SAAS,qBACd,KAAK,SAAW,IAAIhD,EAAS,KAAM,KAAK,SAAS,0BAA0B,EAC3E,KAAK,YAAY,EACV,IACX,CACA,mBAAmBO,EAAM0C,EAAM,CACrB,MAAA1D,EAAagB,EAAK,OAAS,EAC3BjB,EAAaiB,EAAK,CAAC,EAAIA,EAAK,CAAC,EAAE,OAAS,EACxCH,EAAO,CAAA,EACb,QAAShE,EAAM,EAAGA,EAAMmD,EAAYnD,IAC3BgE,EAAA,KAAK,IAAIF,EAAI,CACd,OAAQ,GACR,MAAO,OAAO9D,CAAG,CACpB,CAAA,CAAC,EAEN,MAAMiE,EAAU,CAAA,EAChB,QAASjB,EAAM,EAAGA,EAAME,EAAYF,IACxBiB,EAAA,KAAK,IAAIJ,EAAO,CACpB,MAAO,IACP,MAAO,OAAOb,CAAG,CACpB,CAAA,CAAC,EAQC,OANQ,IAAIU,EAAO,CACtB,KAAAmD,EACA,KAAA7C,EACA,QAAAC,EACA,YAAa,IAAA,CAChB,CAEL,CACA,eAAgB,CACN,MAAAyC,EAAa,KAAK,KAAK,OACvBC,EAAa,KAAK,KAAK,CAAC,EAAI,KAAK,KAAK,CAAC,EAAE,OAAS,EAClDG,EAAa,CAAA,EACnB,QAAS9G,EAAM,EAAGA,EAAM0G,EAAY1G,IAAO,CACvC,MAAMoE,EAAW,CAAA,EACjB,QAASpB,EAAM,EAAGA,EAAM2D,EAAY3D,IACvBoB,EAAA,KAAK,KAAK,KAAKpE,CAAG,EAAEgD,CAAG,EAAE,qBAAqB,EAE3D8D,EAAW,KAAK1C,CAAQ,CAC5B,CACO,OAAA0C,CACX,CACJ"}