{"version":3,"file":"main.js","sources":["../src/modules/renderBox.ts","../src/components/editor.ts","../src/components/header.ts","../src/components/scroller.ts","../src/modules/cell.ts","../src/components/sheet.ts","../src/components/table.ts","../src/components/toolbar.ts","../src/modules/config.ts","../src/modules/selection.ts","../src/modules/styles.ts","../src/modules/viewport.ts","../src/modules/column.ts","../src/modules/row.ts","../src/utils/createData.ts","../src/modules/cache.ts","../src/main.ts"],"sourcesContent":["export class RenderBox {\n    x;\n    y;\n    width;\n    height;\n    constructor(config, cellPosition) {\n        this.x = this.getXCoord(cellPosition.column, config);\n        this.y = this.getYCoord(cellPosition.row, config);\n        this.width = config.columns[cellPosition.column].width;\n        this.height = config.rows[cellPosition.row].height;\n    }\n    getXCoord(column, config) {\n        let x = 0;\n        for (let i = 0; i < column; i++) {\n            x += config.columns[i].width;\n        }\n        return x;\n    }\n    getYCoord(row, config) {\n        let y = 0;\n        for (let i = 0; i < row; i++) {\n            y += config.rows[i].height;\n        }\n        return y;\n    }\n}\n","import { RenderBox } from \"../modules/renderBox\";\nexport class Editor {\n    element;\n    root;\n    constructor(root) {\n        this.root = root;\n        const element = document.createElement('input');\n        element.classList.add('editor');\n        this.element = element;\n        this.hide();\n    }\n    hide() {\n        this.element.style.display = 'none';\n        this.element.classList.add('hide');\n        this.element.blur();\n        window.removeEventListener('click', this.handleClickOutside);\n        this.element.removeEventListener('keydown', this.handleKeydown);\n        this.root.focusTable();\n    }\n    show(position) {\n        const { height, width, x, y } = new RenderBox(this.root.config, position);\n        const cell = this.root.getCell(position);\n        this.element.classList.remove('hide');\n        this.element.style.top = (y - this.root.viewport.top) + 'px';\n        this.element.style.left = (x - this.root.viewport.left) + 'px';\n        this.element.style.width = width + 'px';\n        this.element.style.height = height + 'px';\n        this.element.style.display = 'block';\n        window.addEventListener('click', this.handleClickOutside);\n        this.element.addEventListener('keydown', this.handleKeydown);\n        this.element.value = cell.value;\n        this.element.focus();\n        this.element.select();\n    }\n    handleKeydown = (event) => {\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.hide();\n                break;\n            }\n            case 'Enter': {\n                this.root.changeCellValues(this.root.selection.selectedCell, {\n                    value: this.element.value,\n                    displayValue: this.element.value\n                });\n                this.hide();\n            }\n        }\n    };\n    handleClickOutside = (event) => {\n        const target = event.target;\n        if (!this.element.contains(target)) {\n            this.hide();\n        }\n    };\n}\n","export class Header {\n    element;\n    root;\n    constructor(root) {\n        this.root = root;\n        const headerElement = document.createElement('header');\n        headerElement.classList.add();\n        this.element = headerElement;\n    }\n}\n","export class Scroller {\n    element;\n    verticalScroller;\n    horizontalScroller;\n    root;\n    isSelecting = false;\n    constructor(root) {\n        this.root = root;\n        const { horizontalScroller, scroller, verticalScroller } = this.buildComponent();\n        this.element = scroller;\n        this.verticalScroller = verticalScroller;\n        this.horizontalScroller = horizontalScroller;\n        this.element.style.height = this.root.config.view.height + 'px';\n        this.element.style.width = this.root.config.view.width + 'px';\n        this.element.tabIndex = -1;\n        this.updateScrollerSize(); //* Init size set\n        this.element.addEventListener('scroll', this.handleScroll);\n        this.element.addEventListener('mousedown', this.handleClick);\n        this.element.addEventListener('mousemove', this.handleMouseMove);\n        this.element.addEventListener('mouseup', this.handleMouseUp);\n        this.element.addEventListener('dblclick', this.handleDoubleClick);\n        this.element.addEventListener('keydown', this.handleKeydown);\n    }\n    handleMouseMove = (event) => {\n        if (!this.isSelecting)\n            return;\n        const { offsetX, offsetY } = event;\n        const lastSelectedCell = this.root.getCellByCoords(offsetX, offsetY);\n        if (this.root.selection.selectedRange) {\n            this.root.selection.selectedRange.to = lastSelectedCell;\n        }\n        this.root.renderSheet();\n    };\n    handleMouseUp = () => {\n        this.isSelecting = false;\n        if (this.root.selection.selectedRange) {\n            if ((this.root.selection.selectedRange.from.row === this.root.selection.selectedRange.to.row) &&\n                (this.root.selection.selectedRange.from.column === this.root.selection.selectedRange.to.column)) {\n                this.root.selection.selectedRange = null;\n            }\n        }\n        this.root.renderSheet();\n    };\n    handleDoubleClick = (event) => {\n        event.preventDefault();\n        const position = this.root.getCellByCoords(event.offsetX, event.offsetY);\n        this.root.showEditor(position);\n    };\n    handleKeydown = (event) => {\n        console.log(event);\n        //* Navigation\n        if (['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'].includes(event.key)) {\n            event.preventDefault();\n            this.root.selection.selectedRange = null;\n            switch (event.key) {\n                case 'ArrowLeft': {\n                    if (this.root.selection.selectedCell && this.root.selection.selectedCell.column > 0) {\n                        console.log('tick');\n                        this.root.selection.selectedCell.column -= 1;\n                        this.root.renderSheet();\n                    }\n                    break;\n                }\n                case 'ArrowRight': {\n                    if (this.root.selection.selectedCell && this.root.selection.selectedCell.column < this.root.config.columns.length - 1) {\n                        this.root.selection.selectedCell.column += 1;\n                        this.root.renderSheet();\n                    }\n                    break;\n                }\n                case 'ArrowUp': {\n                    if (this.root.selection.selectedCell && this.root.selection.selectedCell.row > 0) {\n                        this.root.selection.selectedCell.row -= 1;\n                        this.root.renderSheet();\n                    }\n                    break;\n                }\n                case 'ArrowDown': {\n                    if (this.root.selection.selectedCell && this.root.selection.selectedCell.row < this.root.config.rows.length - 1) {\n                        this.root.selection.selectedCell.row += 1;\n                        this.root.renderSheet();\n                    }\n                    break;\n                }\n            }\n        }\n        if (!event.metaKey && !event.ctrlKey) { //* Prevent handle shortcutrs\n            if (event.key === 'F2' || /^([a-z]|[а-я])$/.test(event.key.toLowerCase())) { //* English and Russian keyboard. Or F2 button\n                event.preventDefault();\n                if (!this.root.selection.selectedCell)\n                    return;\n                this.root.showEditor(this.root.selection.selectedCell);\n            }\n        }\n        if (event.key === 'Delete') {\n            event.preventDefault();\n            this.root.deleteSelectedCellsValues();\n            this.root.renderSheet();\n        }\n    };\n    handleClick = (event) => {\n        if (event.button !== 0)\n            return; // Left mouse button\n        const { offsetX, offsetY } = event;\n        const clickedCell = this.root.getCellByCoords(offsetX, offsetY);\n        this.isSelecting = true;\n        this.root.selection.selectedRange = {\n            from: clickedCell,\n            to: clickedCell\n        };\n        this.root.selection.selectedCell = clickedCell;\n        this.root.renderSheet();\n    };\n    handleScroll = () => {\n        const rect = this.getViewportBoundlingRect();\n        this.root.viewport.updateValues(rect);\n        this.root.renderSheet();\n    };\n    getViewportBoundlingRect() {\n        const { scrollTop, scrollLeft } = this.element;\n        const { height, width } = this.element.getBoundingClientRect();\n        const bottom = scrollTop + height;\n        const right = scrollLeft + width;\n        return {\n            top: scrollTop,\n            left: scrollLeft,\n            bottom,\n            right\n        };\n    }\n    buildComponent() {\n        const scroller = document.createElement('div');\n        const verticalScroller = document.createElement('div');\n        const horizontalScroller = document.createElement('div');\n        const groupScrollers = document.createElement('div');\n        const stack = document.createElement('div');\n        verticalScroller.style.width = '0px';\n        verticalScroller.style.pointerEvents = 'none';\n        horizontalScroller.style.pointerEvents = 'none';\n        groupScrollers.style.display = 'flex';\n        stack.appendChild(verticalScroller);\n        stack.appendChild(horizontalScroller);\n        groupScrollers.appendChild(stack);\n        this.verticalScroller = verticalScroller;\n        this.horizontalScroller = horizontalScroller;\n        scroller.appendChild(groupScrollers);\n        scroller.classList.add('scroller');\n        return { scroller, verticalScroller, horizontalScroller };\n    }\n    getActualHeight() {\n        return this.root.config.rows.reduce((acc, curr) => {\n            acc += curr.height;\n            return acc;\n        }, 0);\n    }\n    getActualWidth() {\n        return this.root.config.columns.reduce((acc, curr) => {\n            acc += curr.width;\n            return acc;\n        }, 0);\n    }\n    updateScrollerSize() {\n        const totalHeight = this.getActualHeight();\n        const totalWidth = this.getActualWidth();\n        this.setScrollerHeight(totalHeight);\n        this.setScrollerWidth(totalWidth);\n    }\n    setScrollerHeight(height) {\n        this.verticalScroller.style.height = height + 'px';\n    }\n    setScrollerWidth(width) {\n        this.horizontalScroller.style.width = width + 'px';\n    }\n}\n","import { RenderBox } from \"./renderBox\";\nexport class CellStyles {\n    fontSize = 16;\n    fontColor = 'black';\n    background = 'white';\n    borderColor = 'black';\n    selectedBackground = '#4287f5';\n    selectedFontColor = '#ffffff';\n    constructor(props) {\n        if (props) {\n            Object.assign(this, props); // Override default styles\n        }\n    }\n}\nexport class Position {\n    row;\n    column;\n    constructor(row, column) {\n        this.row = row;\n        this.column = column;\n    }\n}\nexport class SerializableCell {\n    value;\n    displayValue;\n    resultValue;\n    position;\n    style;\n    constructor(props) {\n        this.value = props.value;\n        this.displayValue = props.displayValue;\n        this.resultValue = props.resultValue;\n        this.position = props.position;\n        this.style = props.style;\n    }\n}\nexport class Cell {\n    value;\n    displayValue;\n    /** This refers to the values ​​​​that were obtained by calculations, for example, after calculating the formula  */\n    resultValue;\n    position;\n    style = new CellStyles();\n    constructor(props) {\n        this.value = props.value;\n        this.displayValue = props.displayValue;\n        this.resultValue = props.resultValue;\n        this.position = props.position;\n    }\n    getSerializableCell() {\n        const cell = new SerializableCell({\n            displayValue: this.displayValue,\n            position: this.position,\n            resultValue: this.resultValue,\n            style: this.style,\n            value: this.value\n        });\n        return cell;\n    }\n    changeValues(values) {\n        Object.assign(this, values);\n    }\n    isCellInRange(root) {\n        const { column, row } = this.position;\n        const { selectedRange } = root.selection;\n        if (!selectedRange)\n            return false;\n        const isCellInRow = row >= Math.min(selectedRange.from.row, selectedRange.to.row) && row <= Math.max(selectedRange.to.row, selectedRange.from.row);\n        const isCellInCol = column >= Math.min(selectedRange.from.column, selectedRange.to.column) && column <= Math.max(selectedRange.to.column, selectedRange.from.column);\n        return isCellInCol && isCellInRow;\n    }\n    render(root) {\n        let { height, width, x, y } = new RenderBox(root.config, this.position);\n        const { ctx } = root;\n        const isCellSelected = (root.selection.selectedCell?.row === this.position.row && root.selection.selectedCell.column === this.position.column);\n        const isCellInRange = this.isCellInRange(root);\n        y -= root.viewport.top;\n        x -= root.viewport.left;\n        ctx.clearRect(x, y, width, height);\n        ctx.fillStyle = isCellSelected || isCellInRange ? this.style.selectedBackground : this.style.background;\n        ctx.strokeStyle = 'black';\n        ctx.fillRect(x, y, width - 1, height - 1);\n        ctx.strokeRect(x, y, width, height);\n        ctx.fillStyle = isCellSelected || isCellInRange ? this.style.selectedFontColor : this.style.fontColor;\n        ctx.textAlign = 'left';\n        ctx.font = `${this.style.fontSize}px Arial`;\n        ctx.textBaseline = 'middle';\n        ctx.fillText(this.displayValue, x + 2, y + height / 2);\n    }\n}\n","import { Position } from \"../modules/cell\";\n/**\n * Display (CANVAS) element where cells render\n */\nexport class Sheet {\n    element;\n    ctx;\n    root;\n    constructor(root) {\n        this.root = root;\n        const canvas = document.createElement('canvas');\n        canvas.classList.add('sheet');\n        //* Set up canvas sizes based on provided root config\n        canvas.height = this.root.config.view.height;\n        canvas.width = this.root.config.view.width;\n        canvas.style.width = this.root.config.view.width + 'px';\n        canvas.style.height = this.root.config.view.height + 'px';\n        this.element = canvas;\n        const ctx = this.element.getContext('2d');\n        if (!ctx)\n            throw new Error('Enable hardware acceleration');\n        this.ctx = ctx;\n    }\n    getCellByCoords(x, y) {\n        let row = 0;\n        let height = 0;\n        while (height <= y) {\n            height += this.root.config.rows[row].height;\n            if (height >= y)\n                break;\n            row++;\n        }\n        let col = 0;\n        let width = 0;\n        while (width <= x) {\n            width += this.root.config.columns[col].width;\n            if (width >= x)\n                break;\n            col++;\n        }\n        return new Position(row, col);\n    }\n    renderCell(position) {\n        const { column, row } = position;\n        this.root.data[row][column].render(this.root);\n    }\n    renderSheet() {\n        const firstRowIdx = this.root.viewport.firstRow;\n        const lastColIdx = this.root.viewport.lastCol + 3;\n        const lastRowIdx = this.root.viewport.lastRow + 3;\n        const firstColIdx = this.root.viewport.firstCol;\n        for (let row = firstRowIdx; row <= lastRowIdx; row++) {\n            for (let col = firstColIdx; col <= lastColIdx; col++) {\n                if (!this.root.config.columns[col] || !this.root.config.rows[row])\n                    break; //* Prevent read undefined\n                this.renderCell({ column: col, row });\n            }\n        }\n    }\n}\n","/** Base (root) component */\nexport class Table {\n    element;\n    root;\n    constructor(root) {\n        this.root = root;\n        const container = document.createElement('div');\n        container.classList.add('spreadsheet_container');\n        this.element = container;\n        this.changeElementSizes(this.root.viewProps);\n    }\n    changeElementSizes(sizes) {\n        const { height, width } = sizes;\n        this.element.style.width = width + 'px';\n        this.element.style.height = height + 'px';\n    }\n}\n","export class Toolbar {\n    element;\n    root;\n    constructor(root) {\n        this.root = root;\n        const toolbarElement = document.createElement('div');\n        toolbarElement.classList.add('toolbar');\n        this.element = toolbarElement;\n    }\n}\n","export class Config {\n    rows;\n    columns;\n    view = {\n        width: 800,\n        height: 600,\n    };\n    constructor(props) {\n        this.columns = props.columns;\n        this.rows = props.rows;\n        this.view = props.view;\n    }\n}\n","export class Selection {\n    selectedCell = null;\n    selectedRange = null;\n}\n","export class Styles {\n}\n","export class Viewport {\n    root;\n    top;\n    left;\n    right;\n    bottom;\n    firstRow;\n    lastRow;\n    firstCol;\n    lastCol;\n    constructor(root, props) {\n        this.root = root;\n        this.top = props.top;\n        this.left = props.left;\n        this.right = props.right;\n        this.bottom = props.bottom;\n        this.firstRow = this.getFirstRow();\n        this.lastCol = this.getFirstRow(); //!Temp\n        this.firstCol = this.getFirstRow(); //!Temp\n        this.lastRow = this.getLastRow();\n        this.updateValues({\n            top: 0,\n            left: 0,\n            right: this.root.viewProps.width,\n            bottom: this.root.viewProps.height\n        });\n    }\n    updateValues(props) {\n        this.top = props.top;\n        this.left = props.left;\n        this.right = props.right;\n        this.bottom = props.bottom;\n        this.firstRow = this.getFirstRow();\n        this.lastRow = this.getLastRow();\n        this.firstCol = this.getFirstCol();\n        this.lastCol = this.getLastCol();\n    }\n    /** Get index of first row in viewport */\n    getFirstRow() {\n        let rowIdx = this.root.cache.getRowByYCoord(this.top);\n        return rowIdx;\n    }\n    getLastRow() {\n        let rowIdx = this.root.cache.getRowByYCoord(this.bottom);\n        return rowIdx;\n    }\n    getFirstCol() {\n        let colIdx = this.root.cache.getColumnByXCoord(this.left);\n        return colIdx;\n    }\n    getLastCol() {\n        let colIdx = this.root.cache.getColumnByXCoord(this.right);\n        return colIdx;\n    }\n}\n","export class Column {\n    width;\n    title;\n    constructor(props) {\n        this.width = props.width;\n        this.title = props.title;\n    }\n}\n","export class Row {\n    height;\n    title;\n    constructor(props) {\n        this.height = props.height;\n        this.title = props.title;\n    }\n}\n","import { Cell } from \"../modules/cell\";\nimport { Column } from \"../modules/column\";\nimport { Config } from \"../modules/config\";\nimport { Row } from \"../modules/row\";\nexport function createSampleData(rows, columns, fillCellsByCoords = false) {\n    const data = [];\n    for (let row = 0; row <= rows; row++) {\n        const innerRow = [];\n        for (let col = 0; col <= columns; col++) {\n            const value = fillCellsByCoords ? `${row}:${col}` : '';\n            const cell = new Cell({\n                displayValue: value,\n                resultValue: value,\n                value,\n                position: {\n                    column: col,\n                    row: row\n                }\n            });\n            innerRow.push(cell);\n        }\n        data.push(innerRow);\n    }\n    return data;\n}\nexport function createSampleConfig(rows, columns) {\n    const rowsArr = [];\n    for (let i = 0; i <= rows; i++) {\n        const rowItem = new Row({\n            height: 40,\n            title: String(i)\n        });\n        rowsArr.push(rowItem);\n    }\n    const colsArr = [];\n    for (let i = 0; i <= columns; i++) {\n        const colItem = new Column({\n            title: String(i),\n            width: 150\n        });\n        colsArr.push(colItem);\n    }\n    const config = new Config({\n        columns: colsArr,\n        rows: rowsArr,\n        view: {\n            height: 600,\n            width: 800\n        }\n    });\n    return config;\n}\nexport function makeSpreadsheetConfigAndData(rows, columns) {\n    const data = createSampleData(rows, columns);\n    const config = createSampleConfig(rows, columns);\n    return { data, config };\n}\n","export class CachedColumn {\n    xPos;\n    colIdx;\n    constructor(props) {\n        this.xPos = props.xPos;\n        this.colIdx = props.colIdx;\n    }\n}\nexport class CachedRow {\n    yPos;\n    rowIdx;\n    constructor(props) {\n        this.yPos = props.yPos;\n        this.rowIdx = props.rowIdx;\n    }\n}\nexport class Cache {\n    columns;\n    rows;\n    constructor(initial) {\n        this.columns = initial.columns;\n        this.rows = initial.rows;\n    }\n    getRowByYCoord(y) {\n        let rowIdx = 0;\n        for (let i = 0; i < this.rows.length; i++) {\n            if (y <= this.rows[i].yPos) { //* Intersection detect\n                rowIdx = i;\n                break;\n            }\n        }\n        return rowIdx;\n    }\n    getColumnByXCoord(x) {\n        let colIdx = 0;\n        for (let i = 0; i < this.columns.length; i++) {\n            if (x <= this.columns[i].xPos) { //* Intersection detect\n                colIdx = i;\n                break;\n            }\n        }\n        return colIdx;\n    }\n}\n","import { Editor } from \"./components/editor\";\nimport { Header } from \"./components/header\";\nimport { Scroller } from \"./components/scroller\";\nimport { Sheet } from \"./components/sheet\";\nimport { Table } from \"./components/table\";\nimport { Toolbar } from \"./components/toolbar\";\nimport { Cell } from \"./modules/cell\";\nimport { Config } from \"./modules/config\";\nimport { Selection } from \"./modules/selection\";\nimport { Styles } from \"./modules/styles\";\nimport { Viewport } from \"./modules/viewport\";\nimport './scss/main.scss';\nimport { createSampleData } from \"./utils/createData\";\nimport { Cache, CachedColumn, CachedRow } from \"./modules/cache\";\nimport { Row } from \"./modules/row\";\nimport { Column } from \"./modules/column\";\nexport default class Spreadsheet {\n    table;\n    scroller;\n    toolbar;\n    header;\n    sheet;\n    editor;\n    styles;\n    config;\n    data;\n    viewport;\n    selection;\n    cache;\n    constructor(target, props) {\n        const data = createSampleData(40, 40);\n        const config = this.makeConfigFromData(data, props?.view ?? { height: 600, width: 800 });\n        if (props?.view) {\n            config.view = props.view;\n        }\n        this.config = new Config(config);\n        this.sheet = new Sheet(this);\n        this.table = new Table(this);\n        this.scroller = new Scroller(this);\n        this.toolbar = new Toolbar(this);\n        this.header = new Header(this);\n        this.editor = new Editor(this);\n        this.cache = this.getInitialCache();\n        this.viewport = new Viewport(this, this.scroller.getViewportBoundlingRect());\n        this.selection = new Selection();\n        this.data = data;\n        this.styles = new Styles();\n        this.buildComponent();\n        this.appendTableToTarget(target);\n        this.renderSheet();\n    }\n    getInitialCache() {\n        const cachedCols = [];\n        let currentWidth = 0;\n        for (let i = 0; i <= this.config.columns.length - 1; i++) {\n            const col = this.config.columns[i];\n            currentWidth += col.width;\n            const cacheCol = new CachedColumn({\n                xPos: currentWidth,\n                colIdx: i\n            });\n            cachedCols.push(cacheCol);\n        }\n        const cachedRows = [];\n        let currentHeight = 0;\n        for (let i = 0; i <= this.config.rows.length - 1; i++) {\n            const row = this.config.rows[i];\n            currentHeight += row.height;\n            const cacheRow = new CachedRow({\n                yPos: currentHeight,\n                rowIdx: i\n            });\n            cachedRows.push(cacheRow);\n        }\n        const cache = new Cache({\n            columns: cachedCols,\n            rows: cachedRows\n        });\n        console.log(\"CACHE: \", cache);\n        console.log(\"CONFIG: \", this.config);\n        return cache;\n    }\n    buildComponent() {\n        const content = document.createElement('div'); //* Abstract\n        content.appendChild(this.header.element);\n        content.appendChild(this.sheet.element);\n        content.classList.add('content');\n        this.table.element.appendChild(this.toolbar.element);\n        this.table.element.appendChild(content);\n        this.table.element.appendChild(this.scroller.element);\n        this.table.element.append(this.editor.element);\n    }\n    /**Destroy spreadsheet DOM element.\n     *\n     * May be usefull when need to rerender component.\n     */\n    destroy() {\n        this.table.element.remove();\n    }\n    appendTableToTarget(target) {\n        if (typeof target === 'string') {\n            const element = document.querySelector(target);\n            if (!element)\n                throw new Error(`Element with selector ${target} is not finded in DOM.\\n Make sure it exists.`);\n            element?.appendChild(this.table.element);\n        }\n        if (target instanceof HTMLElement) {\n            target.append(this.table.element);\n        }\n    }\n    /** Canvas rendering context 2D.\n     *\n     * Abble to draw on canvas with default CanvasAPI methods\n     */\n    get ctx() {\n        return this.sheet.ctx;\n    }\n    get viewProps() {\n        return this.config.view;\n    }\n    /** Focusing on interactive part of spreadsheet */\n    focusTable() {\n        this.scroller.element.focus();\n    }\n    getCellByCoords(x, y) {\n        return this.sheet.getCellByCoords(x, y);\n    }\n    getCell(position) {\n        const { column, row } = position;\n        return this.data[row][column];\n    }\n    changeCellValues(position, values) {\n        const { column, row } = position;\n        this.data[row][column].changeValues(values);\n        this.renderCell(row, column);\n    }\n    applyActionToRange(range, callback) {\n        const fromRow = Math.min(range.from.row, range.to.row);\n        const toRow = Math.max(range.from.row, range.to.row);\n        const fromCol = Math.min(range.from.column, range.to.column);\n        const toCol = Math.max(range.from.column, range.to.column);\n        for (let row = fromRow; row <= toRow; row++) {\n            for (let col = fromCol; col <= toCol; col++) {\n                const cell = this.data[row][col];\n                callback(cell);\n            }\n        }\n    }\n    deleteSelectedCellsValues() {\n        if (this.selection.selectedRange !== null) {\n            this.applyActionToRange(this.selection.selectedRange, cell => {\n                this.changeCellValues(cell.position, {\n                    displayValue: '',\n                    resultValue: '',\n                    value: ''\n                });\n            });\n        }\n        else {\n            if (!this.selection.selectedCell)\n                return;\n            this.changeCellValues(this.selection.selectedCell, {\n                displayValue: '',\n                resultValue: '',\n                value: ''\n            });\n        }\n    }\n    showEditor(position) {\n        this.editor.show(position);\n    }\n    renderSheet() {\n        this.sheet.renderSheet();\n    }\n    renderCell(row, col) {\n        this.data[row][col].render(this);\n    }\n    loadData(data) {\n        const rowsLength = data.length;\n        const colsLength = data[0] ? this.data[0].length : 0;\n        this.data = [];\n        const formattedData = [];\n        for (let row = 0; row < rowsLength; row++) {\n            const innerRow = [];\n            for (let col = 0; col < colsLength; col++) {\n                const cell = data[row][col];\n                innerRow.push(new Cell({\n                    displayValue: cell.displayValue,\n                    position: cell.position,\n                    resultValue: cell.resultValue,\n                    value: cell.value\n                }));\n            }\n            formattedData.push(innerRow);\n        }\n        this.data = formattedData;\n        this.selection.selectedCell = null;\n        this.selection.selectedRange = null;\n        this.config = this.makeConfigFromData(formattedData, this.config.view);\n        this.cache = this.getInitialCache();\n        this.scroller.updateScrollerSize();\n        this.viewport = new Viewport(this, this.scroller.getViewportBoundlingRect());\n        this.renderSheet();\n        return this;\n    }\n    makeConfigFromData(data, view) {\n        const lastRowIdx = data.length - 1;\n        const lastColIdx = data[0] ? data[0].length : 0;\n        const rows = [];\n        for (let row = 0; row < lastRowIdx; row++) {\n            rows.push(new Row({\n                height: 40,\n                title: String(row)\n            }));\n        }\n        const columns = [];\n        for (let col = 0; col < lastColIdx; col++) {\n            columns.push(new Column({\n                width: 150,\n                title: String(col)\n            }));\n        }\n        const config = new Config({\n            view,\n            rows,\n            columns\n        });\n        return config;\n    }\n    serializeData() {\n        const rowsLength = this.data.length;\n        const colsLength = this.data[0] ? this.data[0].length : 0;\n        const cellsArray = [];\n        for (let row = 0; row < rowsLength; row++) {\n            const innerRow = [];\n            for (let col = 0; col < colsLength; col++) {\n                innerRow.push(this.data[row][col].getSerializableCell());\n            }\n            cellsArray.push(innerRow);\n        }\n        return cellsArray;\n    }\n}\nexport * from './modules/cache';\nexport * from './modules/cell';\nexport * from './modules/column';\nexport * from './modules/config';\nexport * from './modules/renderBox';\nexport * from './modules/row';\nexport * from './modules/selection';\nexport * from './modules/styles';\nexport * from './modules/viewport';\nexport * from './utils/createData';\n"],"names":["RenderBox","config","cellPosition","__publicField","column","x","i","row","y","Editor","root","event","key","target","element","position","height","width","cell","Header","headerElement","Scroller","offsetX","offsetY","lastSelectedCell","clickedCell","rect","horizontalScroller","scroller","verticalScroller","scrollTop","scrollLeft","bottom","right","groupScrollers","stack","acc","curr","totalHeight","totalWidth","CellStyles","props","Position","SerializableCell","Cell","values","selectedRange","isCellInRow","_a","ctx","isCellSelected","isCellInRange","Sheet","canvas","col","firstRowIdx","lastColIdx","lastRowIdx","firstColIdx","Table","container","sizes","Toolbar","toolbarElement","Config","Selection","Styles","Viewport","Column","Row","createSampleData","rows","columns","fillCellsByCoords","data","innerRow","value","createSampleConfig","rowsArr","rowItem","colsArr","colItem","makeSpreadsheetConfigAndData","CachedColumn","CachedRow","Cache","initial","rowIdx","colIdx","Spreadsheet","cachedCols","currentWidth","cacheCol","cachedRows","currentHeight","cacheRow","cache","content","range","callback","fromRow","toRow","fromCol","toCol","rowsLength","colsLength","formattedData","view","cellsArray"],"mappings":"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"}